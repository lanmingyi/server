/*
 Navicat Premium Data Transfer

 Source Server         : localhost_3306
 Source Server Type    : MySQL
 Source Server Version : 50723
 Source Host           : localhost:3306
 Source Schema         : nacos

 Target Server Type    : MySQL
 Target Server Version : 50723
 File Encoding         : 65001

 Date: 18/11/2022 10:02:47
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2140 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (3, 'cv-gateway-router.json', 'DEFAULT_GROUP', '[{\n  \"id\": \"cv-system\",\n  \"order\": 0,\n  \"predicates\": [{\n    \"name\": \"Path\",\n    \"args\": {\n      \"_genkey_0\": \"/sys/**\",\n      \"_genkey_1\": \"/jmreport/**\",\n      \"_genkey_3\": \"/online/**\",\n      \"_genkey_4\": \"/generic/**\"\n    }\n  }],\n  \"filters\": [],\n  \"uri\": \"lb://cv-system\"\n}, {\n  \"id\": \"cv-demo\",\n  \"order\": 1,\n  \"predicates\": [{\n    \"name\": \"Path\",\n    \"args\": {\n      \"_genkey_0\": \"/mock/**\",\n      \"_genkey_1\": \"/test/**\",\n      \"_genkey_2\": \"/bigscreen/template1/**\",\n      \"_genkey_3\": \"/bigscreen/template2/**\"\n    }\n  }],\n  \"filters\": [],\n  \"uri\": \"lb://cv-demo\"\n}, {\n  \"id\": \"cv-system-websocket\",\n  \"order\": 2,\n  \"predicates\": [{\n    \"name\": \"Path\",\n    \"args\": {\n      \"_genkey_0\": \"/websocket/**\",\n      \"_genkey_1\": \"/newsWebsocket/**\"\n    }\n  }],\n  \"filters\": [],\n  \"uri\": \"lb:ws://cv-system\"\n}, {\n  \"id\": \"cv-demo-websocket\",\n  \"order\": 3,\n  \"predicates\": [{\n    \"name\": \"Path\",\n    \"args\": {\n      \"_genkey_0\": \"/vxeSocket/**\"\n    }\n  }],\n  \"filters\": [],\n  \"uri\": \"lb:ws://cv-demo\"\n}]', 'ca03fbdff2968925da1cbbb95cf43989', '2021-03-03 13:02:14', '2022-10-28 01:35:24', 'nacos', '192.168.110.11', '', '', '', '', '', 'json', '');
INSERT INTO `config_info` VALUES (20, 'cv-gateway-dev.yaml', 'DEFAULT_GROUP', 'brightcomplete:\n  route:\n    config:\n      #type:database nacos yml\n      data-type: database\n      group: DEFAULT_GROUP\n      data-id: cv-gateway-router\nspring:\n  redis:\n    database: 0\n    # host: cv-redis\n    host: 127.0.0.1\n    port: 6379\n    password: customer88', 'b9c40834bd32427feb996367378370f5', '2022-08-04 16:36:11', '2022-10-28 05:53:43', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (24, 'brightcomplete-dev.yaml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n        allow:\n      web-stat-filter:\n        enabled: true\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n        master:\n          url: jdbc:mysql://127.0.0.1:3306/cv_spring?characterEncoding=UTF-8&useUnicode=true&useSSL=false&tinyInt1isBit=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n          username: root\n          password: root\n          driver-class-name: com.mysql.cj.jdbc.Driver\n  redis:\n    database: 0\n    # host: cv-redis\n    host: 127.0.0.1\n    password: customer88\n    port: 6379\n  rabbitmq:\n    host: 127.0.0.1\n    username: customer\n    password: customer88\n    port: 5672\n    publisher-confirms: true\n    publisher-returns: true\n    virtual-host: /\n    listener:\n      simple:\n        acknowledge-mode: manual\n        concurrency: 1\n        max-concurrency: 1\n        retry:\n          enabled: true\nminidao:\n  base-package: com.brightcomplete.modules.jmreport.*,com.brightcomplete.modules.drag.*\nbrightcomplete:\n  signatureSecret: dd05f1c54d63749eda95f9fa6d49v442a\n  signUrls: /sys/dict/getDictItems/*,/sys/dict/loadDict/*,/sys/dict/loadDictOrderByValue/*,/sys/dict/loadDictItem/*,/sys/dict/loadTreeData,/sys/api/queryTableDictItemsByCode,/sys/api/queryFilterTableDictInfo,/sys/api/queryTableDictByKeys,/sys/api/translateDictFromTable,/sys/api/translateDictFromTableByKeys\n  uploadType: local\n  domainUrl:\n    pc: http://localhost:3100\n    app: http://localhost:8051\n  path:\n    upload: /usr/cv-spring/upload\n    webapp: /usr/cv-spring/webapp\n  shiro:\n    excludeUrls: /test/demo/demo3,/test/demo/redisDemo/**,/category/**,/visual/**,/map/**,/jmreport/bigscreen2/**\n  oss:\n    endpoint: oss-cn-beijing.aliyuncs.com\n    accessKey: ??\n    secretKey: ??\n    bucketName: brightcompletedev\n    staticDomain: ??\n  elasticsearch:\n    cluster-name: cv-ES\n    cluster-nodes: cv-es:9200\n    check-enabled: false\n  file-view-domain: 127.0.0.1:8012\n  minio:\n    minio_url: http://minio.brightcomplete.com\n    minio_name: ??\n    minio_pass: ??\n    bucketName: otatest\n  # jmreport:\n  #   mode: dev\n  #   is_verify_token: false\n  #   verify_methods: remove,delete,save,add,update\n  wps:\n    domain: https://wwo.wps.cn/office/\n    appid: ??\n    appsecret: ??\n  xxljob:\n    enabled: false\n    adminAddresses: http://cv-xxljob:9080/xxl-job-admin\n    appname: ${spring.application.name}\n    accessToken: \'\'\n    logPath: /usr/cv-spring/job/jobhandler/logs/\n    logRetentionDays: 30\n  redisson:\n    address: 127.0.0.1:6379\n    password:\n    type: STANDALONE\n    enabled: true\nlogging:\n  level:\n    com.brightcomplete.modules.system.mapper : info\ncas:\n  prefixUrl: http://localhost:8888/cas\nknife4j:\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\njustauth:\n  enabled: true\n  type:\n    GITHUB:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/github/callback\n    WECHAT_ENTERPRISE:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/wechat_enterprise/callback\n      agent-id: ??\n    DINGTALK:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/dingtalk/callback\n  cache:\n    type: default\n    prefix: \'demo::\'\n    timeout: 1h\nthird-app:\n  enabled: false\n  type:\n    WECHAT_ENTERPRISE:\n      enabled: false\n      client-id: ??\n      client-secret: ??\n      agent-id: ??\n    DINGTALK:\n      enabled: false\n      client-id: ??\n      client-secret: ??\n      agent-id: ??', '80e7ef5399d342c70c06ef619fff5eb1', '2022-10-28 01:26:37', '2022-10-31 00:36:41', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (25, 'brightcomplete.yaml', 'DEFAULT_GROUP', 'server:\n  tomcat:\n    max-swallow-size: -1\n  error:\n    include-exception: true\n    include-stacktrace: ALWAYS\n    include-message: ALWAYS\n  compression:\n    enabled: true\n    min-response-size: 1024\n    mime-types: application/javascript,application/json,application/xml,text/html,text/xml,text/plain,text/css,image/*\nmanagement:\n  health:\n    mail:\n      enabled: false\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      sensitive: true\n  endpoint:\n    health:\n      show-details: ALWAYS\nspring:\n  servlet:\n    multipart:\n      max-file-size: 10MB\n      max-request-size: 10MB\n  mail:\n    host: xxx.xxx.com\n    username: xxx@xxx.com\n    password: ??\n    properties:\n      mail:\n        smtp:\n          auth: true\n          starttls:\n            enable: true\n            required: true\n  quartz:\n    job-store-type: jdbc\n    initialize-schema: embedded\n    auto-startup: false\n    startup-delay: 1s\n    overwrite-existing-jobs: true\n    properties:\n      org:\n        quartz:\n          scheduler:\n            instanceName: MyScheduler\n            instanceId: AUTO\n          jobStore:\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            tablePrefix: QRTZ_\n            isClustered: true\n            misfireThreshold: 12000\n            clusterCheckinInterval: 15000\n          threadPool:\n            class: org.quartz.simpl.SimpleThreadPool\n            threadCount: 10\n            threadPriority: 5\n            threadsInheritContextClassLoaderOfInitializingThread: true\n  jackson:\n    date-format:   yyyy-MM-dd HH:mm:ss\n    time-zone:   GMT+8\n  aop:\n    proxy-target-class: true\n  activiti:\n    check-process-definitions: false\n    async-executor-activate: false\n    job-executor-activate: false\n  jpa:\n    open-in-view: false\n  freemarker:\n    suffix: .ftl\n    content-type: text/html\n    charset: UTF-8\n    cache: false\n    prefer-file-system-access: false\n    template-loader-path:\n      - classpath:/templates\n  mvc:\n    static-path-pattern: /**\n    pathmatch:\n      matching-strategy: ant_path_matcher\n  resource:\n    static-locations: classpath:/static/,classpath:/public/\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\nmybatis-plus:\n  mapper-locations: classpath*:com/brightcomplete/modules/**/xml/*Mapper.xml\n  global-config:\n    banner: false\n    db-config:\n      id-type: ASSIGN_ID\n      table-underline: true\n  configuration:\n    call-setters-on-nulls: true', 'f688516fd75158e75dea77dde4f45c80', '2022-10-28 01:26:37', '2022-10-28 01:27:55', 'nacos', '192.168.110.11', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (47, 'office.yml', 'DEFAULT_GROUP', 'server:\n  ip: 172.19.199.42\n  redis-host: 192.168.110.101\n  #port: 9840\nspring:\n  application:\n    name: office\n  #profiles:\n    #active: dev\n  datasource:\n    name: office\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${server.database-host}:3306/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    username: root\n    password: root\n    filters: stat\n    maxActive: 20\n    initialSize: 1\n    maxWait: 60000\n    minIdle: 1\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: select \'x\'\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    maxOpenPreparedStatements: 20\n  thymeleaf:\n    prefix: classpath:/templates/\n    check-template-location: true\n    suffix: .html\n    encoding: UTF-8\n    #content-type: text/html\n    mode: HTML\n    cache: false\n  redis:\n    database: 0\n    host: ${server.redis-host}\n    port: 6379\n    password: customer88.\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: 8\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    host: ${server.rabbitmq-host}\n    port: 5672\n    username: customer\n    password: Ewsd@159357\nmybatis:\n  type-aliases-package: com.brightcomplete.office.model\n  mapper-locations: classpath:com/brightcomplete/office/mapper/*.xml\n  configuration:\n    map-underscore-to-camel-case: true\n\nmapper:\n  mappers:\n    - com.brightcomplete.office.bean.OfficeMapper\n  not-empty: false\n  identity: MYSQL\n  style: camelhump\n\npagehelper:\n  helperDialect: mysql\n  reasonable: true\n  supportMethodsArguments: true\n  params: count=countSql\nenv:\n  dev\n#jwt配置\njwt:\n  audience:\n    clientId: 098f6bcd4621d373cade4e832627b4f9\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    name: officeJwt\n    expiresSecond: 172800\n#PageOffice\nposyspath: /home/zysd/lic/\npopassword: 111111\nxxl:\n  job: \n    admin: \n      addresses: http://127.0.0.1:20800/xxl-job-admin\n    accessToken: \"\"\n    executor: \n      appname: officeAppName\n      address: \"\"\n      ip: \"\"\n      port: 9199\n      logpath: /data/applogs/xxl-job/jobhandler\n      logretentiondays: 1\nmy:\n  host: 172.19.199.42\n  gateway-port: 9770\n  template: office\nwps:\n  # wps edit\n  domain: https://wwo.wps.cn/office/\n#  appid: AK20210324FDBSRJ\n  appid: 123456\n  appsecret: 123456\n  # wps convert\n  convert:\n    appid: 123456\n    appsecret: 123456\n    convert: https://dhs.open.wps.cn/pre/v1/convert\n    query: https://dhs.open.wps.cn/pre/v1/query\n  # wps redirect\nredirect:\n  key: https://34c09h5190.wicp.vip/office/v1/3rd/file/info/\n  value: \n\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\nfeign:\n  sentinel:\n    enabled: true', '49d2756d2b8fd7e95ee882c560b06dd6', '2020-12-10 07:24:15', '2022-01-18 00:57:56', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (50, 'document.yml', 'DEFAULT_GROUP', 'server:\n  #端口\n  port: 2000\nspring:\n  application:\n     #应用程序名称\n    name: document\n  datasource:\n    #数据源名称\n    name: document\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${server.database-host}:3306/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #数据源名称\n    username: root\n    #数据源密码\n    password: root\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 20\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 20\n  redis:\n    #redis使用第几个数据桶\n    database: 0\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    password: customer88.\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: 8\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: Ewsd@159357\n  servlet:\n    multipart:\n    #文件上传最大大小\n      max-file-size: 1024MB\n      max-request-size: 1024MB\n  #阿里云文件相关配置,如何获取key secret请查操作文档    \n  oss:\n    #短信key\n    access-key: 123456\n    #短信secret\n    access-key-secret: 123456\n\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.document.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:mapper/*.xml\n  configuration:\n   #开启驼峰\n    map-underscore-to-camel-case: true\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.document.bean.CommonMapper\n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump\n\n#分页\npagehelper:\n  #指定分页插件使用哪种方言。配置时，可以使用下面的缩写值： oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby\n  helperDialect: mysql\n  #分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页\n  reasonable: true\n  #支持通过 Mapper 接口参数来传递分页参数\n  supportMethodsArguments: true\n  #用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable\n  params: count=countSql\n\n# 分布式文件系统FDFS配置 http://www.cnblogs.com/moonlightL/p/9827229.html\n# ===================================================================\n# 分布式文件系统FDFS配置 https://github.com/tobato/FastDFS_Client\n# ===================================================================\nfdfs:\n  so-timeout: 1501\n  connect-timeout: 601\n  thumb-image:             #缩略图生成参数\n    width: 150\n    height: 150\n  #web-server-url: http://192.168.1.203/\n  web-server-url:\n  tracker-list:            #TrackerList参数,支持多个\n  - 192.168.1.216:22122\n  pool:\n    #从池中借出的对象的最大数目\n    max-total: 153\n    #获取连接时的最大等待毫秒数100\n    max-wait-millis: 102\n  address: http://192.168.1.216      #文件拼接下载显示地址\n\n#jwt配置\njwt:\n  audience:\n    #clientId\n    clientId: 098f6bcd4621d373cade4e832627b4f9\n    #token签名\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    #name\n    name: documentJwt\n    #过期时间\n    expiresSecond: 172800\n\n#定时任务相关配置\nxxl:\n  job:\n    admin:\n      #是否开启定时任务\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: brightcomplete-document\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9929\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: 8\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n\n#文件存储地址\nmy:\n  upload-dir: D:\\zysd\n\n # wps相关配置\nwps:\n  # wps edit 预览编辑地址\n  domain: https://wwo.wps.cn/office/\n  #appid: AK20210324FDBSRJ\n  appid: 123456\n  #appsecret\n  appsecret: 123456\n  # wps convert 转换 暂时没用到\n  convert:\n    appid: 123456\n    appsecret: 123456\n    convert: https://dhs.open.wps.cn/pre/v1/convert\n    query: https://dhs.open.wps.cn/pre/v1/query\n  # wps redirect\nredirect:\n  key: https://34c09h5190.wicp.vip/office/v1/3rd/file/info/\n  value: \n\n#actuator健康检查配置\nmanagement:\n  security:\n    enabled: false\n  endpoints:\n    web:\n      exposure:\n        #加载所有的端点，默认只加载了info、health\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n    #可以关闭指定的端点\n    shutdown:\n      enabled: false\n\n#minio配置    \nminio:\n  #地址 \n  url: http://192.168.110.104:9005/\n  #账号 \n  accessKey: admin\n  #密码 \n  secretKey: admin123\n\n#Fegin连接超时配置\nribbon:\n  #请求处理的超时时间，默认5s\n  ReadTimeout: 300000\n   #请求连接的超时时间，默认2s\n  ConnectTimeout: 300000\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n         #false为不启用超时\n          enabled: false\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000', '173084a7e302a1e8f0fa4f6f2079ae49', '2020-12-10 07:24:47', '2022-01-20 06:20:31', 'nacos', '192.168.110.158', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (52, 'message.yml', 'DEFAULT_GROUP', 'server:\n  port: 9830\nspring:\n  application:\n  #应用程序名称\n    name: message\n  datasource:\n    #数据源名称\n    name: message\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${server.database-host}:3306/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #数据源名称\n    username: root\n    #数据源密码\n    password: root\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 20\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 20\n  redis:\n    #redis使用第几个数据桶\n    database: 0\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    password: customer88.\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: 8\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88.\n    virtual-host: /\n    connection-timeout: 15000\n    template:\n      mandatory: true\n    publisher-confirms: true\n    publisher-returns: true\n    listener:\n      simple:\n        acknowledge-mode: manual # 手工签收\n        concurrency: 5\n        max-concurrency: 10\n      direct:\n        acknowledge-mode: manual   # 配置该消费者的ack方式为手动\n  #邮箱配置      详情查看第三方配置文档    \n  mail:\n    #邮箱发送服务地址 \n    host: smtp.mxhichina.com\n    #邮箱账号\n    username: message@zuoyo.com\n    ##授权码\n    password: 123456\n     #端口号\n    port: 465\n    #编码\n    default-encoding: UTF-8\n    properties:\n      mail:\n        smtp:\n          #发送服务器需要身份验证,要采用指定用户名密码的方式去认证\n          auth: true\n          #如果是用 SSL 方式，需要配置如下属性\n          starttls:\n            #启用\n            enable: true\n            required: true\n          ssl:\n            enable: true  #开启SSL\n  # 阿里云短信的配置     详情查看第三方配置文档     \n  short-message: \n    #短信配置key\n    access-key-id: 123456\n    #短信配置秘钥\n    access-secret: 123456\n\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.message.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/message/mapper/*.xml\n  configuration:\n   #开启驼峰\n    map-underscore-to-camel-case: true\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.message.bean.CommonMapper  \n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump\n\n#分页\npagehelper:\n  #指定分页插件使用哪种方言。配置时，可以使用下面的缩写值： oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby\n  helperDialect: mysql\n  #分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页\n  reasonable: true\n  #支持通过 Mapper 接口参数来传递分页参数\n  supportMethodsArguments: true\n  #用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable\n  params: count=countSql\n\n#jwt配置\njwt:\n  audience:\n    #clientId\n    clientId: messageJwtClientId\n    #token签名\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    #name\n    name: messageJwt\n    #过期时间\n    expiresSecond: 172800\n\n#定时任务相关配置\nxxl:\n  job:\n    admin:\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: brightcomplete-message\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9919\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: -1\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n#actuator健康检查配置\nmanagement:\n  security:\n    enabled: false\n  endpoints:\n    web:\n      exposure:\n        #加载所有的端点，默认只加载了info、health\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n    #可以关闭指定的端点\n    shutdown:\n      enabled: false', 'd3ed0b29f2afc6491b6d13463832223d', '2020-12-10 07:24:47', '2022-02-10 01:00:50', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (57, 'form.yml', 'DEFAULT_GROUP', 'server:\n  #端口\n  port: 9810\nspring:\n  application:\n    # #应用程序名称\n    name: form\n  datasource:\n   #数据源名称\n    name: form\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${server.database-host}:3329/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #数据源名称\n    username: root\n    #数据源密码\n    password: 123456\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 20\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 20\n\n  redis:\n    #redis使用第几个数据桶\n    database: 0\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    password: Ewsd@159357\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: 8\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: Ewsd@159357\n\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.form.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/form/mapper/*.xml\n  configuration:\n   #开启驼峰\n    map-underscore-to-camel-case: true\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.form.bean.FormMapper\n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump\n\n#分页\npagehelper:\n  #指定分页插件使用哪种方言。配置时，可以使用下面的缩写值： oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby\n  helperDialect: mysql\n  #分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页\n  reasonable: true\n  #支持通过 Mapper 接口参数来传递分页参数\n  supportMethodsArguments: true\n  #用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable\n  params: count=countSql\n\nlogging:\n  level:\n    #cn.ewsd.system.mapper: debug\n    io.swagger.models.parameters.AbstractSerializableParameter: error\n\n#jwt配置\njwt:\n  audience:\n    #clientId\n    clientId: 098f6bcd4621d373cade4e832627b4f8\n    #token签名\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    #name\n    name: formJwt\n    #过期时间\n    expiresSecond: 172800\n\nmy:\n  host: 172.19.199.42\n  gateway-port: 9770\n  template: form\n\n#actuator健康检查配置\nmanagement:\n  security:\n    enabled: false\n  endpoints:\n    web:\n      exposure:\n        #加载所有的端点，默认只加载了info、health\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n    #可以关闭指定的端点\n    shutdown:\n      enabled: false\n\n#PageOffice\nposyspath: D:\\zysd\\cert\npopassword: 111111\n#定时任务相关配置\nxxl:\n  job:\n    admin:\n      #是否开启定时任务\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: brightcomplete-form\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9909\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: 8\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n', 'd63ea62a98bd5bf2129287ef931a99dc', '2020-12-10 07:24:47', '2021-12-21 06:11:09', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (60, 'system.yml', 'DEFAULT_GROUP', 'server:\n  tomcat:\n    #文件临时存储\n    basedir: /usr/cv-spring\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.system.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/system/mapper/*.xml\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.system.bean.CommonMapper\n\nmy:\n  host: 172.19.199.42\n  gateway-port: 9770\n  template: system\n  configDic: sysConfig,siteConfig\n#  upload-dir: D:\\usr\n  #本地文件上传\n  upload-dir: /usr\n\n#代码生成相关转换\ngenerator:\n  map:\n    #\\u5305\\u540D\n    systemName: system\n    basepackage: com.brightcomplete\n    package: com.brightcomplete.system\n    author: lmy\n    email: lmy@xxx.xx\n    #\\u8868\\u524D\\u7F00(\\u7C7B\\u540D\\u4E0D\\u4F1A\\u5305\\u542B\\u8868\\u524D\\u7F00)   user_\n    tablePrefix:\n    #\\u7C7B\\u578B\\u8F6C\\u6362\\uFF0C\\u914D\\u7F6E\\u4FE1\\u606F\n    tinyint: Integer\n    smallint: Integer\n    mediumint: Integer\n    int: Integer\n    integer: Integer\n    bigint: Long\n    float: Float\n    double: Double\n    decimal: BigDecimal\n    char: String\n    varchar: String\n    nvarchar: String\n    tinytext: String\n    text: String\n    mediumtext: String\n    longtext: String\n    date: Date\n    datetime: Date\n    timestamp: Date\n    #oracle\n    VARCHAR2: String\n    NUMBER: Integer\n    DATE: Date\n    BLOB: String\n    #单表代码生成指定连接那个库\n    library: emis_system\n#topjui    \ntopjui:\n  right-accordion:\n    fit: true\n#钉钉登录配置\ndingdingconfig:\n  accessKey: 123456\n  accessSecret: 123456-6_AU\n#微信登录配置\nweixinconfig:\n  APPID: 123456\n  replacement: 123456\n  redirectUri: http://demo.brightcomplete.com/system/weixin/weixinLogin\n\nxxl:\n  job:\n    admin:\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://127.0.0.1:8080/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: xxl-job-executor-sample\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9099\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: -1\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n#APP更新配置\napp:\n  #版本号 appVersion > app传过来的版本号则更新\n  appVersion: 1.1.0\n  # 1：整包更新 2 热更新\n  appUpdataType: 2\n  #  wgt apk下载地址\n  appUpdateDownloadUrl: https://fengkai1.oss-cn-beijing.aliyuncs.com/__UNI__8FBDC60.wgt\n  #notes\n  note: 版本更新内容\nqiyeweixinconfig:\n #自建应用Id\n  agentId: 1000015\n  # 企业id  \n  corpid: 123456 \n  #自建应用秘钥\n  secret: 123456 \n  #发送应用消息秘钥\n  mailSecret: 123456-F8ADg \n   #打卡秘钥\n  punchClockSecret: 123456-GWz0\n   #授权后重定向的回调链接地址\n  redirect_uri: http://f122mhb9tm.bjhttp.cn/system/qiyeweixin/getUserToken\n\n#开启sentinel对fegin支持   \nfeign:\n  sentinel:\n    enabled: true', '64e39756aeeebc76e97dead3f2ca8a67', '2020-12-10 07:25:14', '2022-11-18 01:15:21', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (63, 'report.yml', 'DEFAULT_GROUP', 'spring:\n  application:\n    #应用程序名称\n    name: report\n  report:\n    entity:\n      #ureport访问前缀 不允许修改该值\n      name: report\n      #ureport本地图片显示\n      imageShowPath: D:/zysd\n  datasource:\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${server.database-host}:3329/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #数据源名称\n    username: root\n    #数据源密码\n    password: 123456\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 20\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 20\n  datasource2:\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    #指定driver的类名\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #url\n    url: jdbc:mysql://192.168.0.120:3329/emis_system_ant_desgin?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #数据源名称\n    username: root\n    #数据源密码\n    password: 123456\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 20\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 20\n  redis:\n    database: 0\n    host: ${server.redis-host}\n    port: 6379\n    password: Ewsd@159357\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: 8\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: Ewsd@159357\n  servlet:\n    multipart:\n      # 最大支持文件大小\n      max-file-size: 500MB\n      # 最大支持请求大小\n      max-request-size: 500MB\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package:\n    - com.brightcomplete.report.model.activiti\n    - com.brightcomplete.report.model.report\n   #指定mapper.xml访问路径 \n  mapper-locations: classpath*:com/brightcomplete/mapper/**/*.xml\n  configuration:\n  #开启驼峰\n    map-underscore-to-camel-case: true\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.report.bean.ReportMapper\n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump \n\n#分页\npagehelper:\n  #指定分页插件使用哪种方言。配置时，可以使用下面的缩写值： oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby\n  helperDialect: mysql\n  #分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页\n  reasonable: true\n  #支持通过 Mapper 接口参数来传递分页参数\n  supportMethodsArguments: true\n  #用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable\n  params: count=countSql\n\n# ureport Mysql 存储\nureport.mysql.provider:\n  prefix: mysql-\n  disabled: false\n\n#定时任务相关配置\nxxl:\n  job:\n    admin:\n      #是否开启定时任务\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: brightcomplete-report\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9909\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: 8\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n\n#jwt配置\njwt:\n  audience:\n  #clientId\n    clientId: reportJwtId\n    #token签名\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    #name\n    name: reportJwt\n    #过期时间\n    expiresSecond: 172800\n\n#actuator健康检查配置\nmanagement:\n  security:\n    enabled: false\n  endpoints:\n    web:\n      exposure:\n        #加载所有的端点，默认只加载了info、health\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n    #可以关闭指定的端点\n    shutdown:\n      enabled: false\n     ', '85689001cf59e42ecfe22c99f6db4b03', '2020-12-10 07:25:14', '2021-12-21 06:08:16', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (64, 'mdata.yml', 'DEFAULT_GROUP', 'spring:\n  application:\n    #应用程序名称\n    name: mdata\n  datasource:\n      #数据源名称\n    name: mdata\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    #指定driver的类名\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #url\n    url: jdbc:mysql://${server.database-host}:3329/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #数据源名称\n    username: root\n    #数据源密码\n    password: 123456\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 20\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 20\n  redis:\n    #redis使用第几个数据桶\n    database: 0\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    password: Ewsd@159357\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: -1\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: Ewsd@159357\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.mdata.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/mdata/mapper/*.xml\n  configuration:\n   #开启驼峰\n    map-underscore-to-camel-case: true\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.mdata.bean.MdataMapper  \n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump\n\n#分页\npagehelper:\n  #指定分页插件使用哪种方言。配置时，可以使用下面的缩写值： oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby\n  helperDialect: mysql\n  #分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页\n  reasonable: true\n  #支持通过 Mapper 接口参数来传递分页参数\n  supportMethodsArguments: true\n  #用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable\n  params: count=countSql\n\n\n#actuator健康检查配置\nmanagement:\n  security:\n    enabled: false\n  endpoints:\n    web:\n      exposure:\n        #加载所有的端点，默认只加载了info、health\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n    #可以关闭指定的端点\n    shutdown:\n      enabled: false\n\n#jwt配置\njwt:\n  audience:\n    #clientId\n    clientId: mdataJwtClientId\n    #token签名\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    #name\n    name: mdataJwt\n    #过期时间\n    expiresSecond: 172800\n\nxxl:\n  job:\n    admin:\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: feginDemo\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9099\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: -1\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\nweixinconfig:\n  appId: 123456\n  appSecret: 123456\n  mchId: 123456\n  mchKey: 123456\n  unifiedorderUrl: https://api.mch.weixin.qq.com/pay/unifiedorder\n  apiKey: 123456\n  \n#钉钉登录配置\ndingdingconfig:\n  accessKey: 123456\n  accessSecret: 123456-123456\n  redirectUri: http://demo.brightcomplete.com/system/dingding/ddLogin', '18c5ab9ccb6aebe0f73b1fd2b0ce4f41', '2020-12-10 07:25:14', '2021-12-21 05:55:00', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (66, 'common.yml', 'DEFAULT_GROUP', 'spring:\n  application:\n    #应用程序名称\n    name: system\n  datasource:\n    #\n    name: system\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${server.database-host}:3329/cv_spring?characterEncoding=UTF-8&useSSL=true\n    username: dbu-brightcomplete\n    password: Zysd@159357#180814\n    filters: stat\n    maxActive: 20\n    initialSize: 1\n    maxWait: 120000\n    minIdle: 1\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: select \'x\'\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    maxOpenPreparedStatements: 20\n    connectionTimeout: 120000\n  cache:\n    type: redis\n    redis:\n      #use-key-prefix: true\n      #key-prefix: dev\n      time-to-live: 30000 #缓存超时时间ms\n      cache-null-values: false #是否缓存空值\n  redis:\n    database: 0\n    host: ${server.redis-host}\n    port: 6379\n    password: Ewsd@159357\n    #ssl:\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    #cluster:\n      #nodes:\n    #sentinel:\n      #master:\n      #nodes:\n    pool:\n      max-active: 8\n      max-wait: -1\n      max-idle: 8\n      min-idle: 0\n    #redisson:\n      #config: classpath:redisson.yml\n  #session:\n    #store-type: redis\n  rabbitmq:\n    host: ${server.rabbitmq-host}\n    port: 5672\n    username: customer\n    password: Ewsd@159357\n  servlet:\n    multipart:\n      #最大支持文件大小\n      max-file-size: 1000MB\n      #最大支持请求大小\n      max-request-size: 1000MB\nmybatis:\n  type-aliases-package: com.brightcomplete.system.model\n  mapper-locations: classpath:com/brightcomplete/system/mapper/*.xml\n  configuration:\n    map-underscore-to-camel-case: true\n\nmapper:\n  mappers:\n    - com.brightcomplete.system.bean.CommonMapper\n  not-empty: true\n  identity: MYSQL\n  style: camelhump\n\npagehelper:\n  helperDialect: mysql\n  reasonable: true\n  supportMethodsArguments: true\n  params: count=countSql\n\n#actuator健康检查配置\nmanagement:\n  security:\n    enabled: false\n  endpoints:\n    web:\n      exposure:\n        #加载所有的端点，默认只加载了info、health\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n    #可以关闭指定的端点\n    shutdown:\n      enabled: false\n\n#jwt配置\njwt:\n  audience:\n    clientId: 098f6bcd4621d373cade4e832627b4f6\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    name: systemJwt\n    expiresSecond: 172800\n#PageOffice配置\nposyspath: D:/zysd/lic/\npopassword: 111111\nmy:\n  host: 172.19.199.42\n  gateway-port: 9770\n  template: system\n  configDic: sysConfig,siteConfig\n  upload-dir: D:\\zysd\n\ngenerator:\n  #\\u5305\\u540D\n  systemName: office\n  basepackage: cn.ewsd\n  package: cn.ewsd.office\n  author: zhaoxiace\n  email: zhaoxiace@ewsd.cn\n  #\\u8868\\u524D\\u7F00(\\u7C7B\\u540D\\u4E0D\\u4F1A\\u5305\\u542B\\u8868\\u524D\\u7F00)   user_\n  tablePrefix:\n  #\\u7C7B\\u578B\\u8F6C\\u6362\\uFF0C\\u914D\\u7F6E\\u4FE1\\u606F\n  tinyint: Integer\n  smallint: Integer\n  mediumint: Integer\n  int: Integer\n  integer: Integer\n  bigint: Long\n  float: Float\n  double: Double\n  decimal: BigDecimal\n  char: String\n  varchar: String\n  nvarchar: String\n  tinytext: String\n  text: String\n  mediumtext: String\n  longtext: String\n  date: Date\n  datetime: Date\n  timestamp: Date\n  #oracle\n  VARCHAR2: String\n  NUMBER: Integer\n  DATE: Date\n  BLOB: String', 'db29bb0060dd9aedc6669ae087c1db1f', '2020-12-10 07:25:14', '2021-11-03 06:51:15', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (67, 'gateway.yml', 'DEFAULT_GROUP', 'server:\n  #端口\n  port: 9770\n   #数据库地址\n  database-host: 127.0.0.1\n   #redis地址\n  redis-host: 127.0.0.1\n   #rbmq地址\n  rabbitmq-host: 127.0.0.1\nspring:\n  main:\n    #同bean,后覆盖前\n    allow-bean-definition-overriding: true\n  application:\n    #应用程序名称\n    name: gateway\n  datasource:\n    #数据源名称\n    name: gateway\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${server.database-host}:3306/cv_spring_old?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n      #数据源名称\n    username: root\n    #数据源密码\n    password: root\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 20\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 20\n  redis:\n    #redis使用第几个数据桶\n    database: 0\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    password: customer88\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: 8\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88\n  cloud:\n    gateway:\n      discovery:\n        locator:\n        #开启网关拉取nacos的服务\n          enabled: true\n      routes:\n          #id 唯一标识，各个系统模块\n          #uri 访问各个系统模块的ip加端口\n          #predicates 访问模块接口前缀 \n          #filters 过滤掉第一个拦截 \n          #注意事项 个数 顺序保持一致，另外gateway父类配置也增加对应配置\n        - id: sc-provider-system\n          uri: lb://system\n          predicates:\n            - Path= /system/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-mdata\n          uri: lb://mdata\n          predicates:\n            - Path= /mdata/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-message\n          uri: lb://message\n          predicates:\n            - Path= /message/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-document\n          uri: lb://document\n          predicates:\n            - Path= /document/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-report\n          uri: lb://report\n          predicates:\n            - Path= /report/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-workflow\n          uri: lb://workflow\n          predicates:\n            - Path= /workflow/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-form\n          uri: lb://form\n          predicates:\n            - Path= /form/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-office\n          uri: lb://office\n          predicates:\n            - Path= /office/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-erp\n          uri: lb://erp\n          predicates:\n            - Path= /erp/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-bdata\n          uri: lb://bdata\n          predicates:\n            - Path= /bdata/**\n          filters:\n            - StripPrefix= 1\n  servlet:\n    multipart:\n      #最大支持文件大小\n      max-file-size: 100MB\n      #最大支持请求大小\n      max-request-size: 100MB\n     \n#actuator健康检查配置\nmanagement:\n  security:\n    enabled: false\n  endpoints:\n    web:\n      exposure:\n        #加载所有的端点，默认只加载了info、health\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n    #可以关闭指定的端点\n    shutdown:\n      enabled: false\n     \n#Fegin连接超时配置\nribbon:\n  #SocketTimeout: 60000\n  ReadTimeout: 60000 #请求处理的超时时间，默认5s\n  ConnectTimeout: 60000 #请求连接的超时时间，默认2s\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: false #false为不启用超时\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000\n\n#jwt配置\njwt:\n  audience:\n    #clientId\n    clientId: 098f6bcd4621d373cade4e832627b4f6\n    #token签名\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    #name\n    name: systemJwt\n    #过期时间\n    expiresSecond: 172800\n\nposyspath: /usr/cv-spring/lic/\npopassword: 111111\nmy:\n  login-url: /system/login\n\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.gateway.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/gateway/mapper/*.xml\n  configuration:\n   #开启驼峰\n    map-underscore-to-camel-case: true    \n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.gateway.bean.CommonMapper\n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump\n# 用于/actuator/info\ninfo:\n  name: \'brightcomplete-gateway\'\n  description: \'网关模块\'\n  version: \'3.0\'', '0c22f9b73a2d59c8c2bcfd913628aca2', '2020-12-10 07:25:14', '2022-11-18 01:17:24', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (68, 'workflow.yml', 'DEFAULT_GROUP', 'server:\n  ip: 172.19.199.42\n  #port: 9820\nspring:\n  application:\n    name: workflow\n  profiles:\n    active: dev\n  datasource:\n    name: test\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${server.database-host}:3329/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=UTC\n    username: root\n    password: 123456\n    filters: stat\n    maxActive: 20\n    initialSize: 1\n    maxWait: 60000\n    minIdle: 1\n    timeBetweenEvictionRunsMillis: 60000\n    minEvictableIdleTimeMillis: 300000\n    validationQuery: select \'x\'\n    testWhileIdle: true\n    testOnBorrow: false\n    testOnReturn: false\n    poolPreparedStatements: true\n    maxOpenPreparedStatements: 20\n  #activiti:\n    #driver-class-name: com.mysql.cj.jdbc.Driver\n    #url: jdbc:mysql://192.168.0.120:3329/flowable?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #username: customer\n    #password: 123456.\n    #database-schema-update: false\n    #check-process-definitions: true\n    #process-definition-location-prefix: classpath:/processes/\n    #process-definition-location-suffixes:\n      #- **.bpmn\n      #- **.bpmn20.xml\n    #history-level: full\n\n  # jpa:\n  #   hibernate:\n  #     ddl-auto: update\n  #     naming:\n  #       physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl\n  #   show-sql: true\n  #   open-in-view: false\n\n  # thymeleaf:\n  #   prefix: classpath:/templates/\n  #   check-template-location: true\n  #   suffix: .html\n  #   encoding: UTF-8\n  #   #content-type: text/html\n  #   mode: HTML\n  #   cache: false\n  redis:\n    database: 0\n    host: ${server.redis-host}\n    port: 6379\n    password: Ewsd@159357\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: 8\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    host: ${server.rabbitmq-host}\n    port: 5672\n    username: customer\n    password: Ewsd@159357\n\n  jackson:\n    serialization:\n      fail-on-empty-beans: false\n\nflowable:\n  database-schema-update: false\n  check-process-definitions: false\n  #关闭定时任务JOB\n  async-executor-activate: false\n\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package:\n    - com.brightcomplete.workflow.model\n    #- cn.ewsd.workflow.core.model\n    ##指定flowable mapper.xml访问路径\n  mapper-locations: classpath:/META-INF/modeler-mybatis-mappings/*.xml\n    #- classpath*:cn/ewsd/workflow/**/mapper/*.xml\n  configuration:\n    map-underscore-to-camel-case: true\n  configuration-properties:\n      blobType: BLOB\n      boolValue: TRUE\n      prefix:\n\nmapper:\n  mappers:\n    - com.brightcomplete.workflow.bean.WorkflowMapper\n    #- cn.ewsd.workflow.core.bean.WorkflowMapper\n  not-empty: false\n  identity: MYSQL\n  style: camelhump\n\npagehelper:\n  helperDialect: mysql\n  reasonable: true\n  supportMethodsArguments: true\n  params: count=countSql\n\n\n#jwt配置\njwt:\n  audience:\n    clientId: 098f6bcd4621d373cade4e832627b4f7\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    name: workflowJwt\n    expiresSecond: 172800\nmy:\n  host: 172.19.199.42\n  gateway-port: 9770\n  template: workflow\nmanagement:\n  endpoints:\n    web:\n      exposure:\n        include: \'*\'\n\n# #actuator健康检查配置\n# management:\n#   security:\n#     enabled: false\n#   endpoints:\n#     web:\n#       exposure:\n#         #加载所有的端点，默认只加载了info、health\n#         include: \'*\'\n#   endpoint:\n#     health:\n#       show-details: always\n#     #可以关闭指定的端点\n#     shutdown:\n#       enabled: false\n#Fegin连接超时配置\nribbon:\n  #请求处理的超时时间，默认5s\n  ReadTimeout: 300000\n   #请求连接的超时时间，默认2s\n  ConnectTimeout: 300000\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n         #false为不启用超时\n          enabled: false\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000', 'd3af5380f033d23cac9842d29cc7e426', '2020-12-10 07:25:14', '2021-12-21 06:09:46', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (2004, 'erp.yml', 'DEFAULT_GROUP', 'spring:\n  application:\n    #应用程序名称\n    name: erp\n  datasource:\n      #数据源名称\n    name: erp\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    #指定driver的类名\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #url\n    url: jdbc:mysql://${server.database-host}:3329/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #数据源名称\n    username: root\n    #数据源密码\n    password: 123456\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 20\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 20\n  redis:\n    #redis使用第几个数据桶\n    database: 0\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    password: Ewsd@159357\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: -1\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: Ewsd@159357\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.erp.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/erp/mapper/*.xml\n  configuration:\n   #开启驼峰\n    map-underscore-to-camel-case: true\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.erp.bean.ErpMapper  \n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump\n\n#分页\npagehelper:\n  #指定分页插件使用哪种方言。配置时，可以使用下面的缩写值： oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby\n  helperDialect: mysql\n  #分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页\n  reasonable: true\n  #支持通过 Mapper 接口参数来传递分页参数\n  supportMethodsArguments: true\n  #用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable\n  params: count=countSql\n\n\n#actuator健康检查配置\nmanagement:\n  security:\n    enabled: false\n  endpoints:\n    web:\n      exposure:\n        #加载所有的端点，默认只加载了info、health\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n    #可以关闭指定的端点\n    shutdown:\n      enabled: false\n\n#jwt配置\njwt:\n  audience:\n    #clientId\n    clientId: erpJwtClientId\n    #token签名\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    #name\n    name: erpJwt\n    #过期时间\n    expiresSecond: 172800\n\nxxl:\n  job:\n    admin:\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: feginDemo\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9099\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: -1\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\nweixinconfig:\n  appId: 123456\n  appSecret: 123456\n  mchId: 123456\n  mchKey: 123456\n  unifiedorderUrl: https://api.mch.weixin.qq.com/pay/unifiedorder\n  apiKey: 123456\n  \n#钉钉登录配置\ndingdingconfig:\n  accessKey: 123456\n  accessSecret: 123456-123456\n  redirectUri: http://demo.brightcomplete.com/system/dingding/ddLogin', 'a3a1813f64b3f2e9a8c8c3d11b65b214', '2022-01-20 07:00:14', '2022-01-20 07:01:08', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (2005, 'erp-zyj.yml', 'DEFAULT_GROUP', 'server:\n  # 项目端口\n  port: 20201\n  #数据库地址\n  database-host: 192.168.110.101\n  #redis地址  \n  redis-host: 192.168.110.101\n  #rabbitmq地址\n  rabbitmq-host: 192.168.110.101\n  #数据库端口号\n  database-port: 3306          \nspring:\n  datasource:\n    #url\n    url: jdbc:mysql://${server.database-host}:${server.database-port}/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true\n    #数据源名称\n    username: root\n    #driver-class-name: dm.jdbc.driver.DmDriver\n    #url: jdbc:dm://192.168.1.104:5236/TEST\n    #username: SYSDBA\n    #password: fk19961029\n    #数据库密码\n    password: root\n  redis:\n    #redis使用第几个数据桶\n    database: 14\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    #redis密码\n    password: customer88.\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口号\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88.\n\n#定时任务相关配置\nxxl:\n  job:\n    admin:\n      #是否开启\n      enabled: true\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://192.168.110.101:8080/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: erpAppname\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9918\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: 30\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n#Fegin连接超时配置\nribbon:\n  #请求处理的超时时间，默认5s\n  ReadTimeout: 300000\n   #请求连接的超时时间，默认2s\n  ConnectTimeout: 300000\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n         #false为不启用超时\n          enabled: false\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000\n\n#微信相关配置\nweixinconfig:\n  appId: wx35a322db4e0a0b19\n  appSecret: cac92228c699d5e20599987474e5d8ae\n  mchId: 1539479291\n  mchKey: D0D7FAF1ACE51C4A12E5A189E56D1CC3\n  unifiedorderUrl: https://api.mch.weixin.qq.com/pay/unifiedorder\n  apiKey: 047961248a8b227c6c12d9bf052f72fa\n\n#开启sass化  \nzysd:\n  openSaaS: false\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.erp.bean.ErpMapper  \n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump', 'ce321ee4a5fa0221eeee101dc250e860', '2022-01-20 07:00:14', '2022-01-20 07:56:16', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (2039, 'gateway-lmy.yml', 'DEFAULT_GROUP', 'server:\n  #端口\n  port: 38000\n  #数据库连接地址\n  database-host: 127.0.0.1\nspring:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n        #开启网关拉取nacos的服务\n          enabled: true\n      routes:\n          #id 唯一标识，各个系统模块\n          #uri 访问各个系统模块的ip加端口 \n          #注意事项 个数 顺序保持一致，另外gateway父类配置也增加对应配置\n        - id: sc-provider-system\n          # uri: http://192.168.110.173:63002\n        - id: sc-provider-mdata\n          #uri: http://192.168.110.101:31020\n        - id: sc-provider-message\n          #uri: http://localhost:20704\n        - id: sc-provider-document\n          #uri: http://localhost:20304\n        - id: sc-provider-report\n          #uri: http://localhost:20604\n        - id: sc-provider-workflow\n          #uri: http://localhost:20504\n        - id: sc-provider-form\n          # uri: http://192.168.110.101:31040\n        - id: sc-provider-office\n          #uri: http://localhost:22104\n        - id: sc-provider-erp\n          # uri: http://192.168.110.173:63001\n        - id: sc-provider-contract\n          # uri: http://192.168.110.173:63001\n  application:\n    #application名称\n    name: gateway\n  datasource:\n    #数据源名称名称\n    name: gateway\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${server.database-host}:3306/cv_spring_old?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #数据源名称\n    username: root\n    #数据源密码\n    password: root\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 50\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 50\n  redis:\n    #redis使用第几个数据桶\n    database: 0\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    password: customer88\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 50\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: 50\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 50\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88\n  main:\n    #后面bean覆盖前面\n    allow-bean-definition-overriding: true\n  servlet:\n    multipart:\n      # 最大支持文件大小\n      max-file-size: 500MB\n      # 最大支持请求大小\n      max-request-size: 500MB\n\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.gateway.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/gateway/mapper/*.xml\n  configuration:\n   #开启驼峰\n    map-underscore-to-camel-case: true    \n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.gateway.bean.CommonMapper\n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump\n\nposyspath: /usr/cv-spring/lic/\n#Fegin连接超时配置\nribbon:\n  #SocketTimeout: 60000\n  ReadTimeout: 300000 #请求处理的超时时间，默认5s\n  ConnectTimeout: 300000 #请求连接的超时时间，默认2s\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: false #false为不启用超时\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000', '6777e29e06645b938a39baa5f661797f', '2022-02-17 02:26:45', '2022-11-18 01:17:41', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (2045, 'mdata-lmy.yml', 'DEFAULT_GROUP', 'server:\n  # 项目端口\n  port: 38002\n  #数据库地址\n  database-host: 127.0.0.1\n  #redis地址  \n  redis-host: 127.0.0.1\n  #rabbitmq地址\n  rabbitmq-host: 127.0.0.1\n  #数据库端口号\n  database-port: 3306          \nspring:\n  # application:\n  #   #application名称\n  #   name: erp-测试\n  datasource:\n    #url\n    url: jdbc:mysql://${server.database-host}:${server.database-port}/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true\n    #数据源名称\n    username: root\n    #driver-class-name: dm.jdbc.driver.DmDriver\n    #url: jdbc:dm://192.168.1.104:5236/TEST\n    #username: SYSDBA\n    #password: fk19961029\n    #数据库密码\n    password: root\n  redis:\n    #redis使用第几个数据桶\n    database: 14\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    #redis密码\n    password: customer88\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口号\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88\n\nxxl:\n  job:\n    admin:\n      #是否开启\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: feginDemo\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9099\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: 30\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n#Fegin连接超时配置\nribbon:\n  #请求处理的超时时间，默认5s\n  ReadTimeout: 300000\n   #请求连接的超时时间，默认2s\n  ConnectTimeout: 300000\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n         #false为不启用超时\n          enabled: false\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000\n\n#微信相关配置\nweixinconfig:\n  appId: wx35a322db4e0a0b19\n  appSecret: cac92228c699d5e20599987474e5d8ae\n  mchId: 1539479291\n  mchKey: D0D7FAF1ACE51C4A12E5A189E56D1CC3\n  unifiedorderUrl: https://api.mch.weixin.qq.com/pay/unifiedorder\n  apiKey: 047961248a8b227c6c12d9bf052f72fa\n\n#开启sass化  \nzysd:\n  openSaaS: false\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.mdata.bean.MdataMapper  \n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump', '996a4e853024542f6d22cf29e1f98e5f', '2022-02-17 02:51:17', '2022-11-18 00:34:43', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (2049, 'system-lmy.yml', 'DEFAULT_GROUP', 'server:\n  tomcat:\n    #文件临时存储\n    basedir: /usr/cv-spring\n  # 端口 唯一\n  port: 38001\n  # 数据连接ip或域名地址\n  database-host: 127.0.0.1\n  # redis连接ip或域名地址\n  redis-host: 127.0.0.1\n  # redis连接端口\n  redis-port: 6379\n  # rabbitmq连接ip或域名地址\n  rabbitmq-host: 127.0.0.1\n  # 数据库连接端口号\n  database-port: 3306\nspring:\n  # application:\n  #   #application名称\n  #   name: system-测试\n  datasource:\n    # 数据库url\n    url: jdbc:mysql://${server.database-host}:${server.database-port}/cv_spring_old?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    # 数据库用户名\n    username: root\n    # 数据库密码\n    password: root\n  redis:\n    #redis使用第几个数据桶\n    database: 14\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: ${server.redis-port}\n    #redis密码\n    password: customer88\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口号 15672是console 5672是api\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88\n\n#代码生成相关配置    \ngenerator:\n  map:\n    #\\u5305\\u540D\n    systemName: system\n    basepackage: com.brightcomplete\n    package: com.brightcomplete.system\n    author: lmy\n    email: lmy@xxx.xx\n    tablePrefix:\n    tinyint: Integer\n    smallint: Integer\n    mediumint: Integer\n    int: Integer\n    integer: Integer\n    bigint: Long\n    float: Float\n    double: Double\n    decimal: BigDecimal\n    char: String\n    varchar: String\n    nvarchar: String\n    tinytext: String\n    text: String\n    mediumtext: String\n    longtext: String\n    date: Date\n    datetime: Date\n    timestamp: Date\n    #oracle\n    VARCHAR2: String\n    NUMBER: Integer\n    DATE: Date\n    BLOB: String\n\n#本地文件上传地址配置\nmy:\n  upload-dir: D:\\usr\n\n#Fegin连接超时配置\nribbon:\n  #SocketTimeout: 60000\n  ReadTimeout: 300000 #请求处理的超时时间，默认5s\n  ConnectTimeout: 300000 #请求连接的超时时间，默认2s\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: false #false为不启用超时\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000\n\n#定时任务相关配置\nxxl:\n  job:\n    admin:\n      #是否开启\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: xxl-job-executor-sample\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9919\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: 30\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n#开启saas化\nzysd:\n  openSaaS: false\n\n#APP相关配置\napp:\n  #版本号 appVersion > app传过来的版本号则更新\n  appVersion: 0.1.0\n  # 1：整包更新 2 热更新\n  appUpdataType: 1\n  #  wgt apk下载地址\n  appUpdateDownloadUrl: https://fengkai1.oss-cn-beijing.aliyuncs.com/test1/__UNI__3A119EA_0602163943.apk\n  #更新内容\n  note: 版本更新内容\n\n#微信相关配置\nweixinconfig:\n  appId: 123456\n  appSecret: 123456\n  mchId: 123456\n  mchKey: 123456\n  unifiedorderUrl: https://api.mch.weixin.qq.com/pay/unifiedorder\n  apiKey: 123456\n\n#企业微信相关配置\nqiyeweixinconfig:\n  #自建应用Id 办公1000015  商城：1000017\n  agentId: 1000015\n   # 企业id\n  corpid: 123456\n  #自建应用秘钥  办公：baTfJx23uQrivrgKxMDQICfQEVo2T19XHCCbgh9WoPk 商\n  secret: 123456\n  #获取企业微信通讯录秘钥秘钥\n  mailSecret: 123456-F8ADg\n   #打卡秘钥\n  punchClockSecret: 123456-GWz0\n   #授权后重定向的回调链接地址\n  redirect_uri: http://vue.brightcomplete.com/system/qiyeweixin/getUserToken\n   #请求域名或者ip端口号\n  request_domain_name: vue.brightcomplete.com', '97cb98c737080d113d15218b4136616b', '2022-02-17 03:09:54', '2022-11-18 01:22:42', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (2074, 'contract.yml', 'DEFAULT_GROUP', 'spring:\n  application:\n    #应用程序名称\n    name: contract\n  datasource:\n      #数据源名称\n    name: contract\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    #指定driver的类名\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #url\n    url: jdbc:mysql://${server.database-host}:3329/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #数据源名称\n    username: root\n    #数据源密码\n    password: 123456\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 20\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 20\n  redis:\n    #redis使用第几个数据桶\n    database: 0\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    password: Ewsd@159357\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: -1\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: Ewsd@159357\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.contract.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/contract/mapper/*.xml\n  configuration:\n   #开启驼峰\n    map-underscore-to-camel-case: true\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.contract.bean.ContractMapper  \n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump\n\n#分页\npagehelper:\n  #指定分页插件使用哪种方言。配置时，可以使用下面的缩写值： oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby\n  helperDialect: mysql\n  #分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页\n  reasonable: true\n  #支持通过 Mapper 接口参数来传递分页参数\n  supportMethodsArguments: true\n  #用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable\n  params: count=countSql\n\n\n#actuator健康检查配置\nmanagement:\n  security:\n    enabled: false\n  endpoints:\n    web:\n      exposure:\n        #加载所有的端点，默认只加载了info、health\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n    #可以关闭指定的端点\n    shutdown:\n      enabled: false\n\n#jwt配置\njwt:\n  audience:\n    #clientId\n    clientId: contractJwtClientId\n    #token签名\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    #name\n    name: contractJwt\n    #过期时间\n    expiresSecond: 172800\n\nxxl:\n  job:\n    admin:\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: feginDemo\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9099\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: -1\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\nweixinconfig:\n  appId: 123456\n  appSecret: 123456\n  mchId: 123456\n  mchKey: 123456\n  unifiedorderUrl: https://api.mch.weixin.qq.com/pay/unifiedorder\n  apiKey: 123456\n  \n#钉钉登录配置\ndingdingconfig:\n  accessKey: 123456\n  accessSecret: 123456-123456\n  redirectUri: http://demo.brightcomplete.com/system/dingding/ddLogin', 'c5dfe3bfc743b368b057fdb743823123', '2022-02-18 05:27:18', '2022-02-18 05:30:15', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (2075, 'contract-lmy.yml', 'DEFAULT_GROUP', 'server:\n  # 项目端口\n  port: 30003\n  #数据库地址\n  database-host: 192.168.110.101\n  #redis地址  \n  redis-host: 192.168.110.101\n  #rabbitmq地址\n  rabbitmq-host: 192.168.110.101\n  #数据库端口号\n  database-port: 3306          \nspring:\n  # application:\n  #   #application名称\n  #   name: erp-测试\n  datasource:\n    #url\n    url: jdbc:mysql://${server.database-host}:${server.database-port}/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai&allowMultiQueries=true\n    #数据源名称\n    username: root\n    #driver-class-name: dm.jdbc.driver.DmDriver\n    #url: jdbc:dm://192.168.1.104:5236/TEST\n    #username: SYSDBA\n    #password: fk19961029\n    #数据库密码\n    password: root\n  redis:\n    #redis使用第几个数据桶\n    database: 14\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    #redis密码\n    password: customer88.\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口号\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88.\n\nxxl:\n  job:\n    admin:\n      #是否开启\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: feginDemo\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9099\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: 30\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n#Fegin连接超时配置\nribbon:\n  #请求处理的超时时间，默认5s\n  ReadTimeout: 300000\n   #请求连接的超时时间，默认2s\n  ConnectTimeout: 300000\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n         #false为不启用超时\n          enabled: false\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000\n\n#微信相关配置\nweixinconfig:\n  appId: wx35a322db4e0a0b19\n  appSecret: cac92228c699d5e20599987474e5d8ae\n  mchId: 1539479291\n  mchKey: D0D7FAF1ACE51C4A12E5A189E56D1CC3\n  unifiedorderUrl: https://api.mch.weixin.qq.com/pay/unifiedorder\n  apiKey: 047961248a8b227c6c12d9bf052f72fa\n\n#开启sass化  \nzysd:\n  openSaaS: false\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.contract.bean.ContractMapper  \n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump', '2be0ee006a17f2be8685770e1b154cce', '2022-02-18 05:27:18', '2022-03-31 14:10:23', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (2102, 'bdata.yml', 'DEFAULT_GROUP', 'spring:\n  application:\n    #应用程序名称\n    name: bdata\n  datasource:\n      #数据源名称\n    name: bdata\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    #指定driver的类名\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    #url\n    url: jdbc:mysql://${server.database-host}:3329/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #数据源名称\n    username: root\n    #数据源密码\n    password: root\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 20\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 20\n  redis:\n    #redis使用第几个数据桶\n    database: 0\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    password: customer88.\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: -1\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88.\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.bdata.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/bdata/mapper/*/*.xml\n  configuration:\n   #开启驼峰\n    map-underscore-to-camel-case: true\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.bdata.bean.BdataMapper  \n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump\n\n#分页\npagehelper:\n  #指定分页插件使用哪种方言。配置时，可以使用下面的缩写值： oracle,mysql,mariadb,sqlite,hsqldb,postgresql,db2,sqlserver,informix,h2,sqlserver2012,derby\n  helperDialect: mysql\n  #分页合理化参数，默认值为false。当该参数设置为 true 时，pageNum<=0 时会查询第一页\n  reasonable: true\n  #支持通过 Mapper 接口参数来传递分页参数\n  supportMethodsArguments: true\n  #用于从对象中根据属性名取值， 可以配置 pageNum,pageSize,count,pageSizeZero,reasonable\n  params: count=countSql\n\n\n#actuator健康检查配置\nmanagement:\n  security:\n    enabled: false\n  endpoints:\n    web:\n      exposure:\n        #加载所有的端点，默认只加载了info、health\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n    #可以关闭指定的端点\n    shutdown:\n      enabled: false\n\n#jwt配置\njwt:\n  audience:\n    #clientId\n    clientId: bdataJwtClientId\n    #token签名\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    #name\n    name: bdataJwt\n    #过期时间\n    expiresSecond: 172800\n\nxxl:\n  job:\n    admin:\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: feginDemo\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9099\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: -1\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\nweixinconfig:\n  appId: 123456\n  appSecret: 123456\n  mchId: 123456\n  mchKey: 123456\n  unifiedorderUrl: https://api.mch.weixin.qq.com/pay/unifiedorder\n  apiKey: 123456\n  \n#钉钉登录配置\ndingdingconfig:\n  accessKey: 123456\n  accessSecret: 123456-123456\n  redirectUri: http://demo.brightcomplete.com/system/dingding/ddLogin', '1c360fa9f1b728dc17bbc1a459046e40', '2022-03-11 00:38:21', '2022-03-11 01:16:47', 'nacos', '192.168.110.158', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (2132, 'bdata-lmy.yml', 'DEFAULT_GROUP', 'server:\n  # 项目端口\n  port: 30003\n  #数据库地址\n  database-host: 127.0.0.1\n  #redis地址  \n  redis-host: 127.0.0.1\n  #rabbitmq地址\n  rabbitmq-host: 127.0.0.1\n  #数据库端口号\n  database-port: 3306\nspring:\n  datasource:\n    #url\n    url: jdbc:mysql://${server.database-host}:${server.database-port}/cv_spring?characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai&allowMultiQueries=true\n    #数据源名称\n    username: root\n    #driver-class-name: dm.jdbc.driver.DmDriver\n    #url: jdbc:dm://192.168.1.104:5236/TEST\n    #username: SYSDBA\n    #password: fk19961029\n    #数据库密码\n    password: root\n  redis:\n    #redis使用第几个数据桶\n    database: 14\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    #redis密码\n    password: customer88\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口号\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88\n\n#定时任务相关配置\nxxl:\n  job:\n    admin:\n      #是否开启\n      enabled: true\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://192.168.110.101:8080/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: bdataAppname\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9918\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: 30\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n#Fegin连接超时配置\nribbon:\n  #请求处理的超时时间，默认5s\n  ReadTimeout: 300000\n   #请求连接的超时时间，默认2s\n  ConnectTimeout: 300000\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n         #false为不启用超时\n          enabled: false\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000\n\n#微信相关配置\nweixinconfig:\n  appId: wx35a322db4e0a0b19\n  appSecret: cac92228c699d5e20599987474e5d8ae\n  mchId: 1539479291\n  mchKey: D0D7FAF1ACE51C4A12E5A189E56D1CC3\n  unifiedorderUrl: https://api.mch.weixin.qq.com/pay/unifiedorder\n  apiKey: 047961248a8b227c6c12d9bf052f72fa\n\n#开启sass化  \nzysd:\n  openSaaS: false\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.bdata.bean.BdataMapper  \n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump', '4f295deacb62f2b42de5b3083ab529f7', '2022-03-21 12:57:22', '2022-03-31 14:10:33', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (2134, 'document-lmy.yml', 'DEFAULT_GROUP', 'server:\n   # 项目端口\n  port: 30003\n  #数据库地址\n  database-host: 127.0.0.1\n  #redis地址  \n  redis-host: 127.0.0.1\n  #rabbitmq地址\n  rabbitmq-host: 127.0.0.1\nspring:\n  datasource:\n    #url\n    url: jdbc:mysql://${server.database-host}:3306/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #用户名\n    username: root\n    #数据库密码\n    password: root\n  redis:\n    #redis使用第几个数据桶\n    database: 14\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    #redis密码\n    password: customer88\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口号\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88', '61b14351658d53de6efad86ee7e9ec30', '2022-08-18 05:34:26', '2022-08-18 05:35:55', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime(0) NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for config_info_copy1
-- ----------------------------
DROP TABLE IF EXISTS `config_info_copy1`;
CREATE TABLE `config_info_copy1`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 26 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_copy1
-- ----------------------------
INSERT INTO `config_info_copy1` VALUES (3, 'cv-gateway-router.json', 'DEFAULT_GROUP', '[{\n  \"id\": \"cv-system\",\n  \"order\": 0,\n  \"predicates\": [{\n    \"name\": \"Path\",\n    \"args\": {\n      \"_genkey_0\": \"/sys/**\",\n      \"_genkey_1\": \"/jmreport/**\",\n      \"_genkey_3\": \"/online/**\",\n      \"_genkey_4\": \"/generic/**\"\n    }\n  }],\n  \"filters\": [],\n  \"uri\": \"lb://cv-system\"\n}, {\n  \"id\": \"cv-demo\",\n  \"order\": 1,\n  \"predicates\": [{\n    \"name\": \"Path\",\n    \"args\": {\n      \"_genkey_0\": \"/mock/**\",\n      \"_genkey_1\": \"/test/**\",\n      \"_genkey_2\": \"/bigscreen/template1/**\",\n      \"_genkey_3\": \"/bigscreen/template2/**\"\n    }\n  }],\n  \"filters\": [],\n  \"uri\": \"lb://cv-demo\"\n}, {\n  \"id\": \"cv-system-websocket\",\n  \"order\": 2,\n  \"predicates\": [{\n    \"name\": \"Path\",\n    \"args\": {\n      \"_genkey_0\": \"/websocket/**\",\n      \"_genkey_1\": \"/newsWebsocket/**\"\n    }\n  }],\n  \"filters\": [],\n  \"uri\": \"lb:ws://cv-system\"\n}, {\n  \"id\": \"cv-demo-websocket\",\n  \"order\": 3,\n  \"predicates\": [{\n    \"name\": \"Path\",\n    \"args\": {\n      \"_genkey_0\": \"/vxeSocket/**\"\n    }\n  }],\n  \"filters\": [],\n  \"uri\": \"lb:ws://cv-demo\"\n}]', 'ca03fbdff2968925da1cbbb95cf43989', '2021-03-03 13:02:14', '2022-10-28 01:35:24', 'nacos', '192.168.110.11', '', '', '', '', '', 'json', '');
INSERT INTO `config_info_copy1` VALUES (20, 'cv-gateway-dev.yaml', 'DEFAULT_GROUP', 'brightcomplete:\n  route:\n    config:\n      #type:database nacos yml\n      data-type: database\n      group: DEFAULT_GROUP\n      data-id: cv-gateway-router\nspring:\n  redis:\n    database: 0\n    # host: cv-redis\n    host: 127.0.0.1\n    port: 6379\n    password: customer88', 'b9c40834bd32427feb996367378370f5', '2022-08-04 16:36:11', '2022-10-28 05:53:43', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info_copy1` VALUES (24, 'brightcomplete-dev.yaml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n        allow:\n      web-stat-filter:\n        enabled: true\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n        master:\n          url: jdbc:mysql://127.0.0.1:3306/cv_spring?characterEncoding=UTF-8&useUnicode=true&useSSL=false&tinyInt1isBit=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n          username: root\n          password: root\n          driver-class-name: com.mysql.cj.jdbc.Driver\n  redis:\n    database: 0\n    # host: cv-redis\n    host: 127.0.0.1\n    password: customer88\n    port: 6379\n  rabbitmq:\n    host: 127.0.0.1\n    username: customer\n    password: customer88\n    port: 5672\n    publisher-confirms: true\n    publisher-returns: true\n    virtual-host: /\n    listener:\n      simple:\n        acknowledge-mode: manual\n        concurrency: 1\n        max-concurrency: 1\n        retry:\n          enabled: true\nminidao:\n  base-package: com.brightcomplete.modules.jmreport.*,com.brightcomplete.modules.drag.*\nbrightcomplete:\n  signatureSecret: dd05f1c54d63749eda95f9fa6d49v442a\n  signUrls: /sys/dict/getDictItems/*,/sys/dict/loadDict/*,/sys/dict/loadDictOrderByValue/*,/sys/dict/loadDictItem/*,/sys/dict/loadTreeData,/sys/api/queryTableDictItemsByCode,/sys/api/queryFilterTableDictInfo,/sys/api/queryTableDictByKeys,/sys/api/translateDictFromTable,/sys/api/translateDictFromTableByKeys\n  uploadType: local\n  domainUrl:\n    pc: http://localhost:3100\n    app: http://localhost:8051\n  path:\n    upload: /usr/cv-spring/upload\n    webapp: /usr/cv-spring/webapp\n  shiro:\n    excludeUrls: /test/demo/demo3,/test/demo/redisDemo/**,/category/**,/visual/**,/map/**,/jmreport/bigscreen2/**\n  oss:\n    endpoint: oss-cn-beijing.aliyuncs.com\n    accessKey: ??\n    secretKey: ??\n    bucketName: brightcompletedev\n    staticDomain: ??\n  elasticsearch:\n    cluster-name: cv-ES\n    cluster-nodes: cv-es:9200\n    check-enabled: false\n  file-view-domain: 127.0.0.1:8012\n  minio:\n    minio_url: http://minio.brightcomplete.com\n    minio_name: ??\n    minio_pass: ??\n    bucketName: otatest\n  # jmreport:\n  #   mode: dev\n  #   is_verify_token: false\n  #   verify_methods: remove,delete,save,add,update\n  wps:\n    domain: https://wwo.wps.cn/office/\n    appid: ??\n    appsecret: ??\n  xxljob:\n    enabled: false\n    adminAddresses: http://cv-xxljob:9080/xxl-job-admin\n    appname: ${spring.application.name}\n    accessToken: \'\'\n    logPath: /usr/cv-spring/job/jobhandler/logs/\n    logRetentionDays: 30\n  redisson:\n    address: 127.0.0.1:6379\n    password:\n    type: STANDALONE\n    enabled: true\nlogging:\n  level:\n    com.brightcomplete.modules.system.mapper : info\ncas:\n  prefixUrl: http://localhost:8888/cas\nknife4j:\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\njustauth:\n  enabled: true\n  type:\n    GITHUB:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/github/callback\n    WECHAT_ENTERPRISE:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/wechat_enterprise/callback\n      agent-id: ??\n    DINGTALK:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/dingtalk/callback\n  cache:\n    type: default\n    prefix: \'demo::\'\n    timeout: 1h\nthird-app:\n  enabled: false\n  type:\n    WECHAT_ENTERPRISE:\n      enabled: false\n      client-id: ??\n      client-secret: ??\n      agent-id: ??\n    DINGTALK:\n      enabled: false\n      client-id: ??\n      client-secret: ??\n      agent-id: ??', '80e7ef5399d342c70c06ef619fff5eb1', '2022-10-28 01:26:37', '2022-10-31 00:36:41', 'nacos', '0:0:0:0:0:0:0:1', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info_copy1` VALUES (25, 'brightcomplete.yaml', 'DEFAULT_GROUP', 'server:\n  tomcat:\n    max-swallow-size: -1\n  error:\n    include-exception: true\n    include-stacktrace: ALWAYS\n    include-message: ALWAYS\n  compression:\n    enabled: true\n    min-response-size: 1024\n    mime-types: application/javascript,application/json,application/xml,text/html,text/xml,text/plain,text/css,image/*\nmanagement:\n  health:\n    mail:\n      enabled: false\n  endpoints:\n    web:\n      exposure:\n        include: \"*\"\n    health:\n      sensitive: true\n  endpoint:\n    health:\n      show-details: ALWAYS\nspring:\n  servlet:\n    multipart:\n      max-file-size: 10MB\n      max-request-size: 10MB\n  mail:\n    host: xxx.xxx.com\n    username: xxx@xxx.com\n    password: ??\n    properties:\n      mail:\n        smtp:\n          auth: true\n          starttls:\n            enable: true\n            required: true\n  quartz:\n    job-store-type: jdbc\n    initialize-schema: embedded\n    auto-startup: false\n    startup-delay: 1s\n    overwrite-existing-jobs: true\n    properties:\n      org:\n        quartz:\n          scheduler:\n            instanceName: MyScheduler\n            instanceId: AUTO\n          jobStore:\n            class: org.springframework.scheduling.quartz.LocalDataSourceJobStore\n            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate\n            tablePrefix: QRTZ_\n            isClustered: true\n            misfireThreshold: 12000\n            clusterCheckinInterval: 15000\n          threadPool:\n            class: org.quartz.simpl.SimpleThreadPool\n            threadCount: 10\n            threadPriority: 5\n            threadsInheritContextClassLoaderOfInitializingThread: true\n  jackson:\n    date-format:   yyyy-MM-dd HH:mm:ss\n    time-zone:   GMT+8\n  aop:\n    proxy-target-class: true\n  activiti:\n    check-process-definitions: false\n    async-executor-activate: false\n    job-executor-activate: false\n  jpa:\n    open-in-view: false\n  freemarker:\n    suffix: .ftl\n    content-type: text/html\n    charset: UTF-8\n    cache: false\n    prefer-file-system-access: false\n    template-loader-path:\n      - classpath:/templates\n  mvc:\n    static-path-pattern: /**\n    pathmatch:\n      matching-strategy: ant_path_matcher\n  resource:\n    static-locations: classpath:/static/,classpath:/public/\n  autoconfigure:\n    exclude: com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure\nmybatis-plus:\n  mapper-locations: classpath*:com/brightcomplete/modules/**/xml/*Mapper.xml\n  global-config:\n    banner: false\n    db-config:\n      id-type: ASSIGN_ID\n      table-underline: true\n  configuration:\n    call-setters-on-nulls: true', 'f688516fd75158e75dea77dde4f45c80', '2022-10-28 01:26:37', '2022-10-28 01:27:55', 'nacos', '192.168.110.11', '', '', '', '', '', 'yaml', '');

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(20) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(20) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(20) UNSIGNED NOT NULL,
  `nid` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin,
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 100 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (20, 91, 'cv-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'brightcomplete:\n  route:\n    config:\n      #type:database nacos yml\n      data-type: database\n      group: DEFAULT_GROUP\n      data-id: cv-gateway-router\nspring:\n  redis:\n    database: 0\n    # host: cv-redis\n    host: 127.0.0.1\n    port: 6379\n    password: customer88', 'b9c40834bd32427feb996367378370f5', '2010-05-05 00:00:00', '2022-10-28 05:45:21', 'nacos', '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (20, 92, 'cv-gateway-dev.yaml', 'DEFAULT_GROUP', '', 'brightcomplete:\n  route:\n    config:\n      #type:database nacos yml\n      data-type: nacos\n      group: DEFAULT_GROUP\n      data-id: cv-gateway-router\nspring:\n  redis:\n    database: 0\n    # host: cv-redis\n    host: 127.0.0.1\n    port: 6379\n    password: customer88', '92d8e81bc7757c29ae802a6a8fbc9fb9', '2010-05-05 00:00:00', '2022-10-28 05:53:43', 'nacos', '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (24, 93, 'brightcomplete-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n        allow:\n      web-stat-filter:\n        enabled: true\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n        master:\n          url: jdbc:mysql://127.0.0.1:3306/cv_spring?characterEncoding=UTF-8&useUnicode=true&useSSL=false&tinyInt1isBit=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n          username: root\n          password: root\n          driver-class-name: com.mysql.cj.jdbc.Driver\n  redis:\n    database: 0\n    # host: cv-redis\n    host: 127.0.0.1\n    password: customer88\n    port: 6379\n  rabbitmq:\n    host: 127.0.0.1\n    username: customer\n    password: customer88\n    port: 5672\n    publisher-confirms: true\n    publisher-returns: true\n    virtual-host: /\n    listener:\n      simple:\n        acknowledge-mode: manual\n        concurrency: 1\n        max-concurrency: 1\n        retry:\n          enabled: true\nminidao:\n  base-package: com.brightcomplete.modules.bmreport.*,com.brightcomplete.modules.drag.*\nbrightcomplete:\n  signatureSecret: dd05f1c54d63749eda95f9fa6d49v442a\n  signUrls: /sys/dict/getDictItems/*,/sys/dict/loadDict/*,/sys/dict/loadDictOrderByValue/*,/sys/dict/loadDictItem/*,/sys/dict/loadTreeData,/sys/api/queryTableDictItemsByCode,/sys/api/queryFilterTableDictInfo,/sys/api/queryTableDictByKeys,/sys/api/translateDictFromTable,/sys/api/translateDictFromTableByKeys\n  uploadType: local\n  domainUrl:\n    pc: http://localhost:3100\n    app: http://localhost:8051\n  path:\n    upload: /opt/upFiles\n    webapp: /opt/webapp\n  shiro:\n    excludeUrls: /test/demo/demo3,/test/demo/redisDemo/**,/category/**,/visual/**,/map/**,/bmreport/bigscreen2/**\n  oss:\n    endpoint: oss-cn-beijing.aliyuncs.com\n    accessKey: ??\n    secretKey: ??\n    bucketName: brightcompletedev\n    staticDomain: ??\n  elasticsearch:\n    cluster-name: cv-ES\n    cluster-nodes: cv-es:9200\n    check-enabled: false\n  file-view-domain: 127.0.0.1:8012\n  minio:\n    minio_url: http://minio.brightcomplete.com\n    minio_name: ??\n    minio_pass: ??\n    bucketName: otatest\n  # jmreport:\n  #   mode: dev\n  #   is_verify_token: false\n  #   verify_methods: remove,delete,save,add,update\n  wps:\n    domain: https://wwo.wps.cn/office/\n    appid: ??\n    appsecret: ??\n  xxljob:\n    enabled: false\n    adminAddresses: http://cv-xxljob:9080/xxl-job-admin\n    appname: ${spring.application.name}\n    accessToken: \'\'\n    logPath: /opt/cv-spring/job/jobhandler/logs/\n    logRetentionDays: 30\n  redisson:\n    address: 127.0.0.1:6379\n    password:\n    type: STANDALONE\n    enabled: true\nlogging:\n  level:\n    com.brightcomplete.modules.system.mapper : info\ncas:\n  prefixUrl: http://localhost:8888/cas\nknife4j:\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\njustauth:\n  enabled: true\n  type:\n    GITHUB:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/github/callback\n    WECHAT_ENTERPRISE:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/wechat_enterprise/callback\n      agent-id: ??\n    DINGTALK:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/dingtalk/callback\n  cache:\n    type: default\n    prefix: \'demo::\'\n    timeout: 1h\nthird-app:\n  enabled: false\n  type:\n    WECHAT_ENTERPRISE:\n      enabled: false\n      client-id: ??\n      client-secret: ??\n      agent-id: ??\n    DINGTALK:\n      enabled: false\n      client-id: ??\n      client-secret: ??\n      agent-id: ??', '39ea65d4bf7012d0c71a101546ff1689', '2010-05-05 00:00:00', '2022-10-28 05:55:16', 'nacos', '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (24, 94, 'brightcomplete-dev.yaml', 'DEFAULT_GROUP', '', 'spring:\n  datasource:\n    druid:\n      stat-view-servlet:\n        enabled: true\n        loginUsername: admin\n        loginPassword: 123456\n        allow:\n      web-stat-filter:\n        enabled: true\n    dynamic:\n      druid:\n        initial-size: 5\n        min-idle: 5\n        maxActive: 20\n        maxWait: 60000\n        timeBetweenEvictionRunsMillis: 60000\n        minEvictableIdleTimeMillis: 300000\n        validationQuery: SELECT 1 FROM DUAL\n        testWhileIdle: true\n        testOnBorrow: false\n        testOnReturn: false\n        poolPreparedStatements: true\n        maxPoolPreparedStatementPerConnectionSize: 20\n        filters: stat,wall,slf4j\n        connectionProperties: druid.stat.mergeSql\\=true;druid.stat.slowSqlMillis\\=5000\n      datasource:\n        master:\n          url: jdbc:mysql://127.0.0.1:3306/cv_spring?characterEncoding=UTF-8&useUnicode=true&useSSL=false&tinyInt1isBit=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai\n          username: root\n          password: root\n          driver-class-name: com.mysql.cj.jdbc.Driver\n  redis:\n    database: 0\n    # host: cv-redis\n    host: 127.0.0.1\n    password: customer88\n    port: 6379\n  rabbitmq:\n    host: 127.0.0.1\n    username: customer\n    password: customer88\n    port: 5672\n    publisher-confirms: true\n    publisher-returns: true\n    virtual-host: /\n    listener:\n      simple:\n        acknowledge-mode: manual\n        concurrency: 1\n        max-concurrency: 1\n        retry:\n          enabled: true\nminidao:\n  base-package: com.brightcomplete.modules.jmreport.*,com.brightcomplete.modules.drag.*\nbrightcomplete:\n  signatureSecret: dd05f1c54d63749eda95f9fa6d49v442a\n  signUrls: /sys/dict/getDictItems/*,/sys/dict/loadDict/*,/sys/dict/loadDictOrderByValue/*,/sys/dict/loadDictItem/*,/sys/dict/loadTreeData,/sys/api/queryTableDictItemsByCode,/sys/api/queryFilterTableDictInfo,/sys/api/queryTableDictByKeys,/sys/api/translateDictFromTable,/sys/api/translateDictFromTableByKeys\n  uploadType: local\n  domainUrl:\n    pc: http://localhost:3100\n    app: http://localhost:8051\n  path:\n    upload: /opt/upFiles\n    webapp: /opt/webapp\n  shiro:\n    excludeUrls: /test/demo/demo3,/test/demo/redisDemo/**,/category/**,/visual/**,/map/**,/jmreport/bigscreen2/**\n  oss:\n    endpoint: oss-cn-beijing.aliyuncs.com\n    accessKey: ??\n    secretKey: ??\n    bucketName: brightcompletedev\n    staticDomain: ??\n  elasticsearch:\n    cluster-name: cv-ES\n    cluster-nodes: cv-es:9200\n    check-enabled: false\n  file-view-domain: 127.0.0.1:8012\n  minio:\n    minio_url: http://minio.brightcomplete.com\n    minio_name: ??\n    minio_pass: ??\n    bucketName: otatest\n  # jmreport:\n  #   mode: dev\n  #   is_verify_token: false\n  #   verify_methods: remove,delete,save,add,update\n  wps:\n    domain: https://wwo.wps.cn/office/\n    appid: ??\n    appsecret: ??\n  xxljob:\n    enabled: false\n    adminAddresses: http://cv-xxljob:9080/xxl-job-admin\n    appname: ${spring.application.name}\n    accessToken: \'\'\n    logPath: /opt/cv-spring/job/jobhandler/logs/\n    logRetentionDays: 30\n  redisson:\n    address: 127.0.0.1:6379\n    password:\n    type: STANDALONE\n    enabled: true\nlogging:\n  level:\n    com.brightcomplete.modules.system.mapper : info\ncas:\n  prefixUrl: http://localhost:8888/cas\nknife4j:\n  production: false\n  basic:\n    enable: false\n    username: admin\n    password: 123456\njustauth:\n  enabled: true\n  type:\n    GITHUB:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/github/callback\n    WECHAT_ENTERPRISE:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/wechat_enterprise/callback\n      agent-id: ??\n    DINGTALK:\n      client-id: ??\n      client-secret: ??\n      redirect-uri: http://sso.test.com:8080/cv-spring/thirdLogin/dingtalk/callback\n  cache:\n    type: default\n    prefix: \'demo::\'\n    timeout: 1h\nthird-app:\n  enabled: false\n  type:\n    WECHAT_ENTERPRISE:\n      enabled: false\n      client-id: ??\n      client-secret: ??\n      agent-id: ??\n    DINGTALK:\n      enabled: false\n      client-id: ??\n      client-secret: ??\n      agent-id: ??', '52452aa294aea006efc24b7b7a3282c9', '2010-05-05 00:00:00', '2022-10-31 00:36:41', 'nacos', '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (60, 95, 'system.yml', 'DEFAULT_GROUP', '', 'server:\n  tomcat:\n    #文件临时存储\n    basedir: /etc/zuoyo\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.system.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/system/mapper/*.xml\n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.system.bean.CommonMapper\n\nmy:\n  host: 172.19.199.42\n  gateway-port: 9770\n  template: system\n  configDic: sysConfig,siteConfig\n#  upload-dir: D:\\zysd\n  #本地文件上传\n  upload-dir: /home\n\n#代码生成相关转换\ngenerator:\n  map:\n    #\\u5305\\u540D\n    systemName: system\n    basepackage: com.brightcomplete\n    package: com.brightcomplete.system\n    author: fengkai\n    email: fengkai@ewsd.cn\n    #\\u8868\\u524D\\u7F00(\\u7C7B\\u540D\\u4E0D\\u4F1A\\u5305\\u542B\\u8868\\u524D\\u7F00)   user_\n    tablePrefix:\n    #\\u7C7B\\u578B\\u8F6C\\u6362\\uFF0C\\u914D\\u7F6E\\u4FE1\\u606F\n    tinyint: Integer\n    smallint: Integer\n    mediumint: Integer\n    int: Integer\n    integer: Integer\n    bigint: Long\n    float: Float\n    double: Double\n    decimal: BigDecimal\n    char: String\n    varchar: String\n    nvarchar: String\n    tinytext: String\n    text: String\n    mediumtext: String\n    longtext: String\n    date: Date\n    datetime: Date\n    timestamp: Date\n    #oracle\n    VARCHAR2: String\n    NUMBER: Integer\n    DATE: Date\n    BLOB: String\n    #单表代码生成指定连接那个库\n    library: emis_system\n#topjui    \ntopjui:\n  right-accordion:\n    fit: true\n#钉钉登录配置\ndingdingconfig:\n  accessKey: 123456\n  accessSecret: 123456-6_AU\n#微信登录配置\nweixinconfig:\n  APPID: 123456\n  replacement: 123456\n  redirectUri: http://demo.brightcomplete.com/system/weixin/weixinLogin\n\nxxl:\n  job:\n    admin:\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://127.0.0.1:8080/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: xxl-job-executor-sample\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9099\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: -1\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n#APP更新配置\napp:\n  #版本号 appVersion > app传过来的版本号则更新\n  appVersion: 1.1.0\n  # 1：整包更新 2 热更新\n  appUpdataType: 2\n  #  wgt apk下载地址\n  appUpdateDownloadUrl: https://fengkai1.oss-cn-beijing.aliyuncs.com/__UNI__8FBDC60.wgt\n  #notes\n  note: 版本更新内容\nqiyeweixinconfig:\n #自建应用Id\n  agentId: 1000015\n  # 企业id  \n  corpid: 123456 \n  #自建应用秘钥\n  secret: 123456 \n  #发送应用消息秘钥\n  mailSecret: 123456-F8ADg \n   #打卡秘钥\n  punchClockSecret: 123456-GWz0\n   #授权后重定向的回调链接地址\n  redirect_uri: http://f122mhb9tm.bjhttp.cn/system/qiyeweixin/getUserToken\n\n#开启sentinel对fegin支持   \nfeign:\n  sentinel:\n    enabled: true', '1e90644d06fb1a5e627cd11e2be8e7a7', '2010-05-05 00:00:00', '2022-11-18 01:15:21', 'nacos', '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (2049, 96, 'system-lmy.yml', 'DEFAULT_GROUP', '', 'server:\n  tomcat:\n    #文件临时存储\n    basedir: /etc/zuoyo\n  # 端口 唯一\n  port: 38001\n  # 数据连接ip或域名地址\n  database-host: 127.0.0.1\n  # redis连接ip或域名地址\n  redis-host: 127.0.0.1\n  # redis连接端口\n  redis-port: 6379\n  # rabbitmq连接ip或域名地址\n  rabbitmq-host: 127.0.0.1\n  # 数据库连接端口号\n  database-port: 3306\nspring:\n  # application:\n  #   #application名称\n  #   name: system-测试\n  datasource:\n    # 数据库url\n    url: jdbc:mysql://${server.database-host}:${server.database-port}/cv_spring?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    # 数据库用户名\n    username: root\n    # 数据库密码\n    password: root\n  redis:\n    #redis使用第几个数据桶\n    database: 14\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: ${server.redis-port}\n    #redis密码\n    password: customer88\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口号 15672是console 5672是api\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88\n\n#代码生成相关配置    \ngenerator:\n  map:\n    #\\u5305\\u540D\n    systemName: system\n    basepackage: com.brightcomplete\n    package: com.brightcomplete.system\n    author: zhaoxiace\n    email: zhaoxiace@ewsd.cn\n    tablePrefix:\n    tinyint: Integer\n    smallint: Integer\n    mediumint: Integer\n    int: Integer\n    integer: Integer\n    bigint: Long\n    float: Float\n    double: Double\n    decimal: BigDecimal\n    char: String\n    varchar: String\n    nvarchar: String\n    tinytext: String\n    text: String\n    mediumtext: String\n    longtext: String\n    date: Date\n    datetime: Date\n    timestamp: Date\n    #oracle\n    VARCHAR2: String\n    NUMBER: Integer\n    DATE: Date\n    BLOB: String\n\n#本地文件上传地址配置\nmy:\n  upload-dir: D:\\zysd\n\n#Fegin连接超时配置\nribbon:\n  #SocketTimeout: 60000\n  ReadTimeout: 300000 #请求处理的超时时间，默认5s\n  ConnectTimeout: 300000 #请求连接的超时时间，默认2s\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: false #false为不启用超时\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000\n\n#定时任务相关配置\nxxl:\n  job:\n    admin:\n      #是否开启\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: xxl-job-executor-sample\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9919\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: 30\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n#开启saas化\nzysd:\n  openSaaS: false\n\n#APP相关配置\napp:\n  #版本号 appVersion > app传过来的版本号则更新\n  appVersion: 0.1.0\n  # 1：整包更新 2 热更新\n  appUpdataType: 1\n  #  wgt apk下载地址\n  appUpdateDownloadUrl: https://fengkai1.oss-cn-beijing.aliyuncs.com/test1/__UNI__3A119EA_0602163943.apk\n  #更新内容\n  note: 版本更新内容\n\n#微信相关配置\nweixinconfig:\n  appId: 123456\n  appSecret: 123456\n  mchId: 123456\n  mchKey: 123456\n  unifiedorderUrl: https://api.mch.weixin.qq.com/pay/unifiedorder\n  apiKey: 123456\n\n#企业微信相关配置\nqiyeweixinconfig:\n  #自建应用Id 办公1000015  商城：1000017\n  agentId: 1000015\n   # 企业id\n  corpid: 123456\n  #自建应用秘钥  办公：baTfJx23uQrivrgKxMDQICfQEVo2T19XHCCbgh9WoPk 商\n  secret: 123456\n  #获取企业微信通讯录秘钥秘钥\n  mailSecret: 123456-F8ADg\n   #打卡秘钥\n  punchClockSecret: 123456-GWz0\n   #授权后重定向的回调链接地址\n  redirect_uri: http://vue.brightcomplete.com/system/qiyeweixin/getUserToken\n   #请求域名或者ip端口号\n  request_domain_name: vue.brightcomplete.com', '6028600280be18f8a909877632b4fbee', '2010-05-05 00:00:00', '2022-11-18 01:16:28', 'nacos', '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (67, 97, 'gateway.yml', 'DEFAULT_GROUP', '', 'server:\n  #端口\n  port: 9770\n   #数据库地址\n  database-host: 127.0.0.1\n   #redis地址\n  redis-host: 127.0.0.1\n   #rbmq地址\n  rabbitmq-host: 127.0.0.1\nspring:\n  main:\n    #同bean,后覆盖前\n    allow-bean-definition-overriding: true\n  application:\n    #应用程序名称\n    name: gateway\n  datasource:\n    #数据源名称\n    name: gateway\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${server.database-host}:3306/cv_spring_old?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n      #数据源名称\n    username: root\n    #数据源密码\n    password: root\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 20\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 20\n  redis:\n    #redis使用第几个数据桶\n    database: 0\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    password: customer88\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 8\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: 8\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 8\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88\n  cloud:\n    gateway:\n      discovery:\n        locator:\n        #开启网关拉取nacos的服务\n          enabled: true\n      routes:\n          #id 唯一标识，各个系统模块\n          #uri 访问各个系统模块的ip加端口\n          #predicates 访问模块接口前缀 \n          #filters 过滤掉第一个拦截 \n          #注意事项 个数 顺序保持一致，另外gateway父类配置也增加对应配置\n        - id: sc-provider-system\n          uri: lb://system\n          predicates:\n            - Path= /system/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-mdata\n          uri: lb://mdata\n          predicates:\n            - Path= /mdata/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-message\n          uri: lb://message\n          predicates:\n            - Path= /message/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-document\n          uri: lb://document\n          predicates:\n            - Path= /document/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-report\n          uri: lb://report\n          predicates:\n            - Path= /report/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-workflow\n          uri: lb://workflow\n          predicates:\n            - Path= /workflow/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-form\n          uri: lb://form\n          predicates:\n            - Path= /form/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-office\n          uri: lb://office\n          predicates:\n            - Path= /office/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-erp\n          uri: lb://erp\n          predicates:\n            - Path= /erp/**\n          filters:\n            - StripPrefix= 1\n        - id: sc-provider-bdata\n          uri: lb://bdata\n          predicates:\n            - Path= /bdata/**\n          filters:\n            - StripPrefix= 1\n  servlet:\n    multipart:\n      #最大支持文件大小\n      max-file-size: 100MB\n      #最大支持请求大小\n      max-request-size: 100MB\n     \n#actuator健康检查配置\nmanagement:\n  security:\n    enabled: false\n  endpoints:\n    web:\n      exposure:\n        #加载所有的端点，默认只加载了info、health\n        include: \'*\'\n  endpoint:\n    health:\n      show-details: always\n    #可以关闭指定的端点\n    shutdown:\n      enabled: false\n     \n#Fegin连接超时配置\nribbon:\n  #SocketTimeout: 60000\n  ReadTimeout: 60000 #请求处理的超时时间，默认5s\n  ConnectTimeout: 60000 #请求连接的超时时间，默认2s\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: false #false为不启用超时\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000\n\n#jwt配置\njwt:\n  audience:\n    #clientId\n    clientId: 098f6bcd4621d373cade4e832627b4f6\n    #token签名\n    base64Secret: MDk4ZjZiY2Q0NjIxZDM3M2NhZGU0ZTgzMjYyN2I0ZjY=\n    #name\n    name: systemJwt\n    #过期时间\n    expiresSecond: 172800\n\nposyspath: /usr/zysd/lic/\npopassword: 111111\nmy:\n  login-url: /system/login\n\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.gateway.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/gateway/mapper/*.xml\n  configuration:\n   #开启驼峰\n    map-underscore-to-camel-case: true    \n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.gateway.bean.CommonMapper\n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump\n# 用于/actuator/info\ninfo:\n  name: \'brightcomplete-gateway\'\n  description: \'网关模块\'\n  version: \'3.0\'', '803c082596a54f31a3c16303f811c6b4', '2010-05-05 00:00:00', '2022-11-18 01:17:24', 'nacos', '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (2039, 98, 'gateway-lmy.yml', 'DEFAULT_GROUP', '', 'server:\n  #端口\n  port: 38000\n  #数据库连接地址\n  database-host: 127.0.0.1\nspring:\n  cloud:\n    gateway:\n      discovery:\n        locator:\n        #开启网关拉取nacos的服务\n          enabled: true\n      routes:\n          #id 唯一标识，各个系统模块\n          #uri 访问各个系统模块的ip加端口 \n          #注意事项 个数 顺序保持一致，另外gateway父类配置也增加对应配置\n        - id: sc-provider-system\n          # uri: http://192.168.110.173:63002\n        - id: sc-provider-mdata\n          #uri: http://192.168.110.101:31020\n        - id: sc-provider-message\n          #uri: http://localhost:20704\n        - id: sc-provider-document\n          #uri: http://localhost:20304\n        - id: sc-provider-report\n          #uri: http://localhost:20604\n        - id: sc-provider-workflow\n          #uri: http://localhost:20504\n        - id: sc-provider-form\n          # uri: http://192.168.110.101:31040\n        - id: sc-provider-office\n          #uri: http://localhost:22104\n        - id: sc-provider-erp\n          # uri: http://192.168.110.173:63001\n        - id: sc-provider-contract\n          # uri: http://192.168.110.173:63001\n  application:\n    #application名称\n    name: gateway\n  datasource:\n    #数据源名称名称\n    name: gateway\n    # 使用druid数据源\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://${server.database-host}:3306/cv_spring_old?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    #数据源名称\n    username: root\n    #数据源密码\n    password: root\n    ##配置监控统计拦截的filters，去掉后监控界面sql无法统计，\'wall\'用于防火墙，此处是filter修改的地方\n    filters: stat\n    #指定连接池中最大的活跃连接数.\n    maxActive: 50\n    #指定启动连接池时，初始建立的连接数量\n    initialSize: 1\n    #指定连接池等待连接返回的最大等待时间，毫秒单位.\n    maxWait: 60000\n    #指定必须保持连接的最小值(For DBCP and Tomcat connection pools)\n    minIdle: 1\n    #空闲连接回收的时间间隔，与test-while-idle一起使用 毫秒\n    timeBetweenEvictionRunsMillis: 60000\n    #连接池空闲连接的有效时间 ，毫秒\n    minEvictableIdleTimeMillis: 300000\n    #指定获取连接时连接校验的sql查询语句.\n    validationQuery: select \'x\'\n    #当连接空闲时，是否执行连接测试.\n    testWhileIdle: true\n    #当从连接池借用连接时，是否测试该连接.\n    testOnBorrow: false\n    #在连接归还到连接池时是否测试该连接.\n    testOnReturn: false\n    #指定最大的打开的prepared statements数量\n    poolPreparedStatements: true\n     #指定最大的打开的prepared statements数量\n    maxOpenPreparedStatements: 50\n  redis:\n    #redis使用第几个数据桶\n    database: 0\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: 6379\n    password: customer88\n    # 链接超时时间（毫秒）\n    timeout: 5000\n    jedis:\n      pool:\n        # 最大空闲连接\n        max-idle: 50\n        # 最小空闲链接\n        min-idle: 0\n        # 最大连接数（负数表示没有限制）\n        max-active: 50\n        # 最大阻塞等待时间（负数表示没有限制）\n        max-wait: 0\n  pool:\n    max-active: 50\n    max-wait: -1\n    max-idle: 8\n    min-idle: 0\n  session:\n    store-type: redis\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口  15672 console端口  5672 api接口\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88\n  main:\n    #后面bean覆盖前面\n    allow-bean-definition-overriding: true\n  servlet:\n    multipart:\n      # 最大支持文件大小\n      max-file-size: 500MB\n      # 最大支持请求大小\n      max-request-size: 500MB\n\nmybatis:\n  #mybatis指定model访问路径\n  type-aliases-package: com.brightcomplete.gateway.model\n  #指定mapper.xml访问路径\n  mapper-locations: classpath:com/brightcomplete/gateway/mapper/*.xml\n  configuration:\n   #开启驼峰\n    map-underscore-to-camel-case: true    \n\nmapper:\n  #基础Mapper路径\n  mappers:\n    - com.brightcomplete.gateway.bean.CommonMapper\n  #insert和update中，是否判断字符串类型!=\'\'，少数方法会用到\n  not-empty: false\n   #取回主键的方式\n  identity: MYSQL\n   #实体和表转换时的规则，默认驼峰转下划线，可选值为normal用实体名和字段名;camelhump是\n  style: camelhump\n\nposyspath: /usr/zysd/lic/\n#Fegin连接超时配置\nribbon:\n  #SocketTimeout: 60000\n  ReadTimeout: 300000 #请求处理的超时时间，默认5s\n  ConnectTimeout: 300000 #请求连接的超时时间，默认2s\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: false #false为不启用超时\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000', 'd17343bebc06a7e13cf24ed646d05ae2', '2010-05-05 00:00:00', '2022-11-18 01:17:41', 'nacos', '0:0:0:0:0:0:0:1', 'U', '');
INSERT INTO `his_config_info` VALUES (2049, 99, 'system-lmy.yml', 'DEFAULT_GROUP', '', 'server:\n  tomcat:\n    #文件临时存储\n    basedir: /usr/cv-spring\n  # 端口 唯一\n  port: 38001\n  # 数据连接ip或域名地址\n  database-host: 127.0.0.1\n  # redis连接ip或域名地址\n  redis-host: 127.0.0.1\n  # redis连接端口\n  redis-port: 6379\n  # rabbitmq连接ip或域名地址\n  rabbitmq-host: 127.0.0.1\n  # 数据库连接端口号\n  database-port: 3306\nspring:\n  # application:\n  #   #application名称\n  #   name: system-测试\n  datasource:\n    # 数据库url\n    url: jdbc:mysql://${server.database-host}:${server.database-port}/cv_spring_old?characterEncoding=UTF-8&useSSL=true&serverTimezone=Asia/Shanghai\n    # 数据库用户名\n    username: root\n    # 数据库密码\n    password: root\n  redis:\n    #redis使用第几个数据桶\n    database: 14\n    #redis地址\n    host: ${server.redis-host}\n    #redis端口号\n    port: ${server.redis-port}\n    #redis密码\n    password: customer88\n  rabbitmq:\n    #rabbitmq地址\n    host: ${server.rabbitmq-host}\n    #rabbitmq端口号 15672是console 5672是api\n    port: 5672\n    #rabbitmq账号\n    username: customer\n    #rabbitmq密码\n    password: customer88\n\n#代码生成相关配置    \ngenerator:\n  map:\n    #\\u5305\\u540D\n    systemName: system\n    basepackage: com.brightcomplete\n    package: com.brightcomplete.system\n    author: lmy\n    email: lmy@xxx.xx\n    tablePrefix:\n    tinyint: Integer\n    smallint: Integer\n    mediumint: Integer\n    int: Integer\n    integer: Integer\n    bigint: Long\n    float: Float\n    double: Double\n    decimal: BigDecimal\n    char: String\n    varchar: String\n    nvarchar: String\n    tinytext: String\n    text: String\n    mediumtext: String\n    longtext: String\n    date: Date\n    datetime: Date\n    timestamp: Date\n    #oracle\n    VARCHAR2: String\n    NUMBER: Integer\n    DATE: Date\n    BLOB: String\n\n#本地文件上传地址配置\nmy:\n  upload-dir: D:\\usr\n\n#Fegin连接超时配置\nribbon:\n  #SocketTimeout: 60000\n  ReadTimeout: 300000 #请求处理的超时时间，默认5s\n  ConnectTimeout: 300000 #请求连接的超时时间，默认2s\n  MaxAutoRetries: 0\n  MaxAutoRetriesNextServer: 1\nhystrix:\n  command:\n    default:\n      execution:\n        timeout:\n          enabled: false #false为不启用超时\n        isolation:\n          thread:\n            timeoutInMilliseconds: 300000\n\n#定时任务相关配置\nxxl:\n  job:\n    admin:\n      #是否开启\n      enabled: false\n    ##调度中心部署跟地址 [选填]：如调度中心集群部署存在多个地址则用逗号分隔。执行器将会使用该地址进行\"执行器心跳注册\"和\"任务结果回调\"；为空则关闭自动注册；\n      addresses: http://localhost:20800/xxl-job-admin\n    executor:\n    # 执行器AppName [选填]：执行器心跳注册分组依据；为空则关闭自动注册\n      appname: xxl-job-executor-sample\n      #执行器注册 [选填]：优先使用该配置作为注册地址，为空时使用内嵌服务 ”IP:PORT“ 作为注册地址。从而更灵活的支持容器类型执行器动态IP和动态映射端口问题。 \n      address: \"\"\n      #执行器IP [选填]：默认为空表示自动获取IP，多网卡时可手动设置指定IP，该IP不会绑定Host仅作为通讯实用；地址信息用于 \"执行器注册\" 和 \"调度中心请求并触发任务\"；\n      ip: \"\"\n      #执行器端口号 [选填]：小于等于0则自动获取；默认端口为9999，单机部署多个执行器时，注意要配置不同执行器端口；\n      port: 9919\n      #执行器运行日志文件存储磁盘路径 [选填] ：需要对该路径拥有读写权限；为空则使用默认路径；\n      logpath: /data/applogs/xxl-job/jobhandler \n       #调度中心日志表数据保存天数 [必填]：过期日志自动清理；限制大于等于7时生效，否则, 如-1，关闭自动清理功能；\n      logretentiondays: 30\n      #执行器通讯TOKEN [选填]：非空时启用； \n    accessToken:\n\n#开启saas化\nzysd:\n  openSaaS: false\n\n#APP相关配置\napp:\n  #版本号 appVersion > app传过来的版本号则更新\n  appVersion: 0.1.0\n  # 1：整包更新 2 热更新\n  appUpdataType: 1\n  #  wgt apk下载地址\n  appUpdateDownloadUrl: https://fengkai1.oss-cn-beijing.aliyuncs.com/test1/__UNI__3A119EA_0602163943.apk\n  #更新内容\n  note: 版本更新内容\n\n#微信相关配置\nweixinconfig:\n  appId: 123456\n  appSecret: 123456\n  mchId: 123456\n  mchKey: 123456\n  unifiedorderUrl: https://api.mch.weixin.qq.com/pay/unifiedorder\n  apiKey: 123456\n\n#企业微信相关配置\nqiyeweixinconfig:\n  #自建应用Id 办公1000015  商城：1000017\n  agentId: 1000015\n   # 企业id\n  corpid: 123456\n  #自建应用秘钥  办公：baTfJx23uQrivrgKxMDQICfQEVo2T19XHCCbgh9WoPk 商\n  secret: 123456\n  #获取企业微信通讯录秘钥秘钥\n  mailSecret: 123456-F8ADg\n   #打卡秘钥\n  punchClockSecret: 123456-GWz0\n   #授权后重定向的回调链接地址\n  redirect_uri: http://vue.brightcomplete.com/system/qiyeweixin/getUserToken\n   #请求域名或者ip端口号\n  request_domain_name: vue.brightcomplete.com', '97cb98c737080d113d15218b4136616b', '2010-05-05 00:00:00', '2022-11-18 01:22:42', 'nacos', '0:0:0:0:0:0:0:1', 'U', '');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `resource` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `uk_username_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(20) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(10) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(20) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(20) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 2 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (1, '1', 'ac14ab82-51f8-4f0c-aa5b-25fb8384bfb6', 'brightcomplete', 'brightcomplete 命名空间', 'nacos', 1653291038942, 1666919380594);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `password` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
